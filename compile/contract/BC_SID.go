// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BCSIDG1Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG1Point struct {
	X *big.Int
	Y *big.Int
}

// BCSIDG2Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"BroadcastPubKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"SellerAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"SellerGetPayment\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"AddMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"CheckClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_SN\",\"type\":\"tuple\"}],\"name\":\"CreateLogisticsOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a3\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetConfirmResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetCurrentSite\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetMapping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetPointKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"GetProduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetSN\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_pk2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_u\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_s\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_attr\",\"type\":\"string\"}],\"name\":\"RegisterSID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_siteID\",\"type\":\"string\"}],\"name\":\"UpdateStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_g2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pkx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pky\",\"type\":\"tuple\"}],\"name\":\"UploadACsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_code\",\"type\":\"string\"}],\"name\":\"VerifyCode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"buyerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationCode\",\"type\":\"string\"}],\"name\":\"buyerConfirmWithCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_buyerPK\",\"type\":\"tuple\"}],\"name\":\"buyerCreateOrder\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBuyerConfirm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"getSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"point2\",\"type\":\"tuple\"}],\"name\":\"isG2Zero\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBuyerConfirm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderLogistics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"currentSite\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"SN\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"productPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"sellerAcceptOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"sellerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"stringToUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "0x60808060405234601557612b82908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630a6307e514611828578063122030f31461172957806312451ac91461145b5780631614e38e1461169857806316d2e333146115875780631872c257146114955780631aa4a01d1461145b5780631db9a94b1461132057806324f47457146110cf57806328a431af14611309578063303f758014611277578063432964e9146111c35780634d0b1eee146110d45780635683e5ea146110cf5780636163fde71461108c578063633df11f14610fe45780637760cd2f14610fb857806399927c3514610f245780639b4b8d2a14610eab5780639b96eece14610e715780639c0f744714610dfd578063a3ebb00014610dd9578063ac5d372314610d97578063d8483c7514610d45578063dc4b6e7b14610c9f578063e1a7d432146105dc578063e931de80146105c3578063ed758406146105aa578063feaa778e146104d95763fedbe99d1461016657600080fd5b60c03660031901126104d45761017a611935565b602435906001600160a01b03821682036104d4576044356001600160401b0381116104d4576101ad9036906004016119be565b6101b636611b8c565b926040519260ff6002845195602081818801986101d481838c611aa4565b8101600e81520301902001541661048f5760018060a01b0316600052600c60205260406000209060018060a01b0316600052602052610217604060002082611ac7565b916040516102248161194b565b61022d84611d2e565b8152600184015460208201526002840154604082015261024f60038501611d2e565b60608201526004840154608082015261010060ff600761027160058801611cd6565b968760a08601520154818116151560c0850152818160081c16151560e085015260101c1615159101526040519260a084018481106001600160401b03821117610479576040528352602083016001815261033e60209161032661030984604051966102dc8289611982565b6000885260408a0197885260608a01986064358a5260808b019b8c52604051938492839251928391611aa4565b600e90820190815203019020965180518855602001516001880155565b511515600286019060ff801983541691151516179055565b600384019151908151916001600160401b038311610479576103608454611cf4565b601f811161043e575b5081601f84116001146103cd575082600595936103c09895936103a3936000926103c2575b50508160011b916000199060031b1c19161790565b90555b516004840155519101906020600191805184550151910155565b005b01519050388061038e565b9190601f1984168560005283600020936000905b828210610426575050926001928592600598966103c09b98961061040d575b505050811b0190556103a6565b015160001960f88460031b161c19169055388080610400565b806001869782949787015181550196019401906103e1565b610469908560005283600020601f860160051c81019185871061046f575b601f0160051c0190611efe565b38610369565b909150819061045c565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f4c6f67697374696373206f7264657220616c72656164792065786973747300006044820152606490fd5b600080fd5b346104d4576102003660031901126104d4576104f436611b64565b6104fd36611e17565b9060803660c31901126104d4576040519161051783611967565b6105223660c4611dd2565b835261053036610104611dd2565b60208401526080366101431901126104d4576040519161054f83611967565b61055b36610144611dd2565b835261056936610184611dd2565b60208401526101e435926001600160401b0384116104d4576020946105956105a09536906004016119be565b936101c43593612451565b6040519015158152f35b346104d45760206105a06105bd36611c57565b906123d4565b346104d45760206105a06105d636611c07565b906122f6565b60a03660031901126104d4576105f0611935565b6024356001600160401b0381116104d45761060f9036906004016119be565b60403660631901126104d4576040519061062882611967565b6064358252608435602083015260443515610c5a576001600160a01b0383166000908152600b6020526040902061065f9082611ac7565b54928315610c2157604435840293840460443503610bd157833403610be7576000194301438111610bd15760405160208101914283523360601b8060408401526054830152406068820152606881526106b9608882611982565b5190209260409283516106cc8582611982565b601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201526060908551966106f98389611982565b868852601f1983013660208a013760005b60208110610b3c575050506001600160a01b0384166000908152600c6020908152868220338352905285902060ff906007906107469089611ac7565b015416610b015784516107588161194b565b82815260443560208083019182528783018a81528484018a815234608086015260a08501889052600060c08601819052600160e087015261010086018190526001600160a01b038a168152600c84528a8120338252909352918990206107be908b611ac7565b9284518051906001600160401b038211610479576107dc8654611cf4565b601f8111610acf575b50602090601f8311600114610a6857610816929160009183610a5d5750508160011b916000199060031b1c19161790565b84555b516001840155516002830155518051906001600160401b038211610479576108446003840154611cf4565b601f8111610a28575b50602090601f831160011461098a577f85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d768359695936108ad846109869e9795610100956007956000926103c25750508160011b916000199060031b1c19161790565b60038201555b6080840151600482015560a08401518051600583015560200151600682015501916108f060c08201511515849060ff801983541691151516179055565b60e0810151151561ff0084549160081b169061ff0019161783550151151562ff000082549160101b169062ff00001916179055602085519501519061093f88519460c0865260c0860190611b3f565b95604435602086015288850152830152608082015280830360a082015280610971339560018060a01b03169488611b3f565b0390a351918291602083526020830190611b3f565b0390f35b9060038401600052806000209160005b601f1985168110610a10575093600184610100946109869f9896947f85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d768359b9a98600796601f198116106109f7575b505050811b0160038201556108b3565b015160001960f88460031b161c191690558f80806109e7565b9192602060018192868501518155019401920161099a565b610a5790600385016000526020600020601f850160051c8101916020861061046f57601f0160051c0190611efe565b8b61084d565b015190508f8061038e565b90601f1983169187600052816000209260005b818110610ab75750908460019594939210610a9e575b505050811b018455610819565b015160001960f88460031b161c191690558e8080610a91565b92936020600181928786015181550195019301610a7b565b610afb90876000526020600020601f850160051c8101916020861061046f57601f0160051c0190611efe565b8e6107e5565b845162461bcd60e51b81526020600482015260146024820152734f7264657220616c72656164792065786973747360601b6044820152606490fd5b81811a6001600160f81b0319610b59600483901c600f1686612b3b565b5116908260011b9183830460021484151715610bd15760001a610b7c838d612b3b565b536001600160f81b031990610b9490600f1686612b3b565b51166000916001019182600111610bbd576001939291610bb6911a918c612b3b565b530161070a565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08115512081cd95b9d60721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270141c9bd91d58dd081b9bdd08199bdd5b99607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f5175616e74697479206d75737420626520706f736974697665000000000000006044820152606490fd5b346104d45760403660031901126104d4576004356001600160401b0381116104d457610ccf9036906004016119be565b602435908115610cf457610cf19033600052600b602052604060002090611ac7565b55005b60405162461bcd60e51b8152602060048201526024808201527f556e6974207072696365206d7573742062652067726561746572207468616e206044820152637a65726f60e01b6064820152608490fd5b346104d457602060ff6007610d87610d5c36611aed565b6001600160a01b039283166000908152600c8852604080822093909416815291875291902090611ac7565b015460101c166040519015158152f35b346104d45760203660031901126104d4576004356001600160401b0381116104d457610dd1610dcc60209236906004016119be565b612291565b604051908152f35b346104d45760403660031901126104d4576020610dd1610df836611b64565b612265565b346104d45760203660031901126104d4576004356001600160401b0381116104d457610e5d6003610e4d6020610e3a6109869536906004016119be565b8160405193828580945193849201611aa4565b8101600e81520301902001611d2e565b604051918291602083526020830190611b3f565b346104d45760203660031901126104d4576001600160a01b03610e92611935565b16600052600d6020526020604060002054604051908152f35b346104d45760203660031901126104d4576004356001600160401b0381116104d457610f126005610f026020610ee760409536906004016119be565b610eef61224c565b5081865193828580945193849201611aa4565b8101600e81520301902001611cd6565b60208251918051835201516020820152f35b346104d4576103c06000808080610fa2610fa7610f4036611a05565b6001600160a01b03909116808552600c60209081526040808720338852909152852090939190600490610f739083611ac7565b610f8360ff600783015416611e80565b0154938552600c60209081526040808720338852909152852090611ac7565b611f64565b335af1610fb2611e50565b50612094565b346104d45760203660031901126104d4576004356000526000602052610986610e5d6040600020611d2e565b346104d4576101403660031901126104d457610fff36611b64565b61100836611e17565b9061101236611bb4565b91602061101e36611bdc565b9280516001550151600255805160005b600281106110775750506020015160005b600281106110625783516007556020848101516008558351600955830151600a55005b6001906020835193019281600501550161103f565b6001906020835193019281600301550161102e565b346104d45760803660031901126104d45760206105a06040516110ae81611967565b6110b9366004611dd2565b81526110c6366044611dd2565b838201526121b9565b611ca1565b346104d4576111706111186110e836611aed565b9160018060a01b0316600052600c60205260406000209060018060a01b0316600052602052604060002090611ac7565b61112181611d2e565b9060ff600182015491602060028201549161118761114160038301611d2e565b95600483015496600761115660058601611cd6565b940154956040519a8b9a6101408c526101408c0190611b3f565b92868b015260408a015288820360608a0152611b3f565b946080870152805160a0870152015160c0850152818116151560e0850152818160081c16151561010085015260101c1615156101208301520390f35b346104d45760203660031901126104d4576004356001600160401b0381116104d4576111f96020610e3a819336906004016119be565b8101600e81520301902061120c81611cd6565b908260ff60028301541661125f61122560038501611d2e565b611236600560048701549601611cd6565b92604051978789985189520151858801521515604087015260e0606087015260e0860190611b3f565b926080850152805160a0850152015160c08301520390f35b346104d4576103c0600080808061128d36611a05565b90338352600c6020526040832060018060a01b03821684526020526112f6610fa260046112bd6040872086611ac7565b6112cd60ff600783015416611e80565b0154338652600c602090815260408088206001600160a01b038716895290915286209094611ac7565b6001600160a01b03165af1610fb2611e50565b346104d4576103c061131a36611a47565b916120d0565b346104d4576020600361134a61133536611c57565b93908160405193828580945193849201611aa4565b8101600e81520301902061136460ff600283015416611e80565b0181516001600160401b0381116104795761137f8254611cf4565b601f8111611429575b50602092601f82116001146113c9576113ba929382916000926113be5750508160011b916000199060031b1c19161790565b9055005b01519050848061038e565b601f1982169383600052806000209160005b86811061141157508360019596106113f8575b505050811b019055005b015160001960f88460031b161c191690558380806113ee565b919260206001819286850151815501940192016113db565b61145590836000526020600020601f840160051c8101916020851061046f57601f0160051c0190611efe565b83611388565b346104d457602061148c61146e36611a05565b6001600160a01b039091166000908152600b84526040902090611ac7565b54604051908152f35b346104d4576114ad6114a636611c07565b9190612265565b6000526000602052604060002081516001600160401b038111610479576114d48254611cf4565b601f8111611555575b50602092601f821160011461150f576113ba929382916000926113be5750508160011b916000199060031b1c19161790565b601f1982169383600052806000209160005b86811061153d57508360019596106113f857505050811b019055005b91926020600181928685015181550194019201611521565b61158190836000526020600020601f840160051c8101916020851061046f57601f0160051c0190611efe565b836114dd565b6102803660031901126104d45761159d36611b64565b60403660431901126104d457604051906115b682611967565b604435825260643560208301526115cc36611b8c565b916115d636611bb4565b916115e036611bdc565b936040366101431901126104d4576040516115fa81611967565b6101443581526101643560208201526040366101831901126104d45760405161162281611967565b6101843581526101a43560208201526040366101c31901126104d4576040519161164b83611967565b6101c43583526101e43560208401526040366102031901126104d4576020976105a0976040519561167b87611967565b610204358752610224358b88015261026435986102443598611fa0565b346104d4576116ea6116ac6110e836611aed565b600181015460ff60028301546007840154906116f86116d660036116cf88611d2e565b9701611d2e565b60405197889760e0895260e0890190611b3f565b908782036020890152611b3f565b936040860152606085015281811615156080850152818160081c16151560a085015260101c16151560c08301520390f35b346104d457610fa260026117ca61173f36611a47565b6001600160a01b039092166000818152600c602090815260408083203384529091529020909591949192906117749086611ac7565b9060078201906117a182549161178c60ff8416611e80565b61179b60ff8460081c16611ebf565b886123d4565b611814575b505001546000858152600c6020908152604080832033845290915290209093611ac7565b81600052600d6020526040600020805490828201809211610bd157556040519081527fcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e60203392a3005b62ff000019166201000017905586806117a6565b61183136611a05565b9033600052600d6020526040600020549081156118f95733600052600d60205260006040812055600080808085335af1611869611e50565b50156118c1577fd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450906118a660405194604086526040860190611b3f565b60208501939093526001600160a01b031692339281900390a3005b60405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b600435906001600160a01b03821682036104d457565b61012081019081106001600160401b0382111761047957604052565b604081019081106001600160401b0382111761047957604052565b90601f801991011681019081106001600160401b0382111761047957604052565b6001600160401b03811161047957601f01601f191660200190565b81601f820112156104d4578035906119d5826119a3565b926119e36040519485611982565b828452602083830101116104d457816000926020809301838601378301015290565b9060406003198301126104d4576004356001600160a01b03811681036104d45791602435906001600160401b0382116104d457611a44916004016119be565b90565b60606003198201126104d4576004356001600160a01b03811681036104d457916024356001600160401b0381116104d45782611a85916004016119be565b91604435906001600160401b0382116104d457611a44916004016119be565b60005b838110611ab75750506000910152565b8181015183820152602001611aa7565b602090611ae1928260405194838680955193849201611aa4565b82019081520301902090565b60606003198201126104d4576004356001600160a01b03811681036104d457916024356001600160a01b03811681036104d45791604435906001600160401b0382116104d457611a44916004016119be565b90602091611b5881518092818552858086019101611aa4565b601f01601f1916010190565b60409060031901126104d45760405190611b7d82611967565b60043582526024356020830152565b60409060831901126104d45760405190611ba582611967565b608435825260a4356020830152565b60409060c31901126104d45760405190611bcd82611967565b60c435825260e4356020830152565b6040906101031901126104d45760405190611bf682611967565b610104358252610124356020830152565b9060606003198301126104d457604060048303126104d457604051611c2b81611967565b6004358152602435602082015291604435906001600160401b0382116104d457611a44916004016119be565b9060406003198301126104d4576004356001600160401b0381116104d45782611c82916004016119be565b91602435906001600160401b0382116104d457611a44916004016119be565b346104d45760403660031901126104d457611cbe610df836611b64565b6000526000602052610986610e5d6040600020611d2e565b90604051611ce381611967565b602060018294805484520154910152565b90600182811c92168015611d24575b6020831014611d0e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611d03565b9060405191826000825492611d4284611cf4565b8084529360018116908115611db05750600114611d69575b50611d6792500383611982565b565b90506000929192526020600020906000915b818310611d94575050906020611d679282010138611d5a565b6020919350806001915483858901015201910190918492611d7b565b905060209250611d6794915060ff191682840152151560051b82010138611d5a565b9080601f830112156104d4576040805192611ded8285611982565b839181019283116104d457905b828210611e075750505090565b8135815260209182019101611dfa565b9060806043198301126104d457604051611e3081611967565b6020611e4b8294611e42816044611dd2565b84526084611dd2565b910152565b3d15611e7b573d90611e61826119a3565b91611e6f6040519384611982565b82523d6000602084013e565b606090565b15611e8757565b60405162461bcd60e51b815260206004820152601060248201526f4f72646572206e6f742061637469766560801b6044820152606490fd5b15611ec657565b60405162461bcd60e51b815260206004820152601060248201526f119d5b991cc81b9bdd081b1bd8dad95960821b6044820152606490fd5b818110611f09575050565b60008155600101611efe565b611f1f8154611cf4565b9081611f29575050565b81601f60009311600114611f3b575055565b81835260208320611f5791601f0160051c810190600101611efe565b8082528160208120915555565b6007600091611f7281611f15565b826001820155826002820155611f8a60038201611f15565b8260048201558260058201558260068201550155565b92611fed8a611fe78d611fe1611fff9a9b979f9e611ff3979a9f80611fd583611fcf611fdb94611ff99f6126ba565b9e6126ba565b986126ba565b9f6126ba565b966126ba565b996126ba565b9461270e565b9761270e565b9361270e565b93855181511495861596612080575b50508415612073575b841561205f575b50508215612052575b821561203e575b505061203957600190565b600090565b60209192508101519101511415388061202e565b8051825114159250612027565b60209081015191015114159250388061201e565b8051825114159450612017565b60209081015191015114159450388061200e565b1561209b57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b9133600052600c602052604060002060018060a01b0384166000526020526120fc604060002083611ac7565b612125600782019261211460ff855460081c16611ebf565b61212060058401611cd6565b6122f6565b1561217d5750600160ff198254161790557f40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a604051926020845260018060a01b0316928061217833946020830190611b3f565b0390a3565b60008093819350611d67956112f6610fa260028596015493338652600c6020526040862060018060a01b03851687526020526040862090611ac7565b6040516121c581611967565b600081526020810191600083526040516121de81611967565b60008152602081019260008452825151905114938461223b575b508361222a575b5082612216575b505061221157600090565b600190565b602091925081015101519051143880612206565b6020820151519051149250386121ff565b8251602001519051149350386121f8565b6040519061225982611967565b60006020838281520152565b60208151910151604051906020820192835260408201526040815261228b606082611982565b51902090565b60006122d76020926040516122c68582816122b58183019687815193849201611aa4565b81010301601f198101835282611982565b604051928392839251928391611aa4565b8101039060025afa156122ea5760005190565b6040513d6000823e3d90fd5b6122ff90612265565b60005260006020526040600020604051602081019181600082549261232384611cf4565b93600181169081156123b65750600114612374575b5061234c925003601f198101835282611982565b5190209060405161236d602082816122b58183019687815193849201611aa4565b5190201490565b9150506000528160206000206000905b83821061239c575050602061234c9282010138612338565b602091925080600191548385880101520191018391612384565b60ff191687525061234c938015150283016020019150389050612338565b90612441602060049261242f604051916123f681518092868087019101611aa4565b820191611f1f60f21b84840152610dcc600282868a51818c019761241e82602283018b611aa4565b01010301601f198101835282611982565b94604051938492839251928391611aa4565b8101600e81520301902001541490565b939095949561245f836121b9565b80156126a8575b61269d5761248b60405161247981611967565b6001548152600254602082015261276e565b90856040519161249a83611967565b60405160036000825b60028210612683575050506124b9604082611982565b8352604051600594906000815b600282106126695750506124ea95506124e0604082611982565b60208501526128a1565b1561265f5790612537612519612547949360405161250781611967565b6009548152600a5460208201526126ba565b60405161252581611967565b6007548152600854602082015261270e565b906125418561276e565b916128a1565b612553575b5060019150565b61255c90612265565b6000526000602052604060002082516001600160401b038111610479576125838254611cf4565b601f811161262d575b506020601f82116001146125c85781906125be9394956000926103c25750508160011b916000199060031b1c19161790565b90555b803861254c565b601f1982169083600052806000209160005b818110612615575095836001959697106125fc575b505050811b0190556125c1565b015160001960f88460031b161c191690553880806125ef565b9192602060018192868b0151815501940192016125da565b61265990836000526020600020601f840160051c8101916020851061046f57601f0160051c0190611efe565b3861258c565b5060009450505050565b875481526001978801978c965091909101906020016124c6565b825481528b955060019283019291909101906020016124a3565b506000955050505050565b506126b287612291565b821415612466565b91906040516126c881611967565b6000815260006020820152608081946060936020604051926126ea8785611982565b863685378051845201516020830152604082015260076107cf195a01fa156104d457565b60609092919260c06040519161272383611967565b60008352600060208401526020839681608093604051946127448187611982565b368637805185520151828401528051604084015201518482015260066107cf195a01fa156104d457565b60405161277a81611967565b60008152600060208201525080511580612837575b61281c577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208251920151067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478111610bd1576040519161281283611967565b8252602082015290565b5060405161282981611967565b600081526000602082015290565b5060208101511561278f565b6001600160401b0381116104795760051b60200190565b8051156128675760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156128675760400190565b80518210156128675760209160051b010190565b919290606093604051936128b58686611982565b60028552601f19860160005b818110612b1657506128d66040519788611982565b6002875260005b818110612ad35750506128ef8561285a565b526128f98461285a565b506129038461287d565b5261290d8361287d565b506129178461285a565b526129218361285a565b5061292b8361287d565b526129358261287d565b50805190825182036104d457600682029180830460061481151715610bd15761295d83612843565b61296a6040519182611982565b83815261297684612843565b602082019590601f190136873760005b8381106129c15750505050506020906040519283916129a58484611982565b8336843760051b9060086107cf195a01fa156104d45751151590565b6129cb818661288d565b5151600682029082820460061483151715610bd1576129ea828661288d565b5260206129f7838861288d565b51015160009060018301808411612abf57612a12908761288d565b52612a1d838561288d565b515151905060028201808311610bd157612a37908661288d565b526020612a44838561288d565b5151015160009060038301808411612abf57612a60908761288d565b526020612a6d848661288d565b51015151905060048201808311610bd157612a88908661288d565b52602080612a96848661288d565b510151015190600060058201809211610bbd575090612ab8600193928661288d565b5201612986565b634e487b7160e01b83526011600452602483fd5b602090604051612ae281611967565b60408051612af08282611982565b813682378252805190612b038183611982565b3682378382015282828b010152016128dd565b602090604051612b2581611967565b6000815260008382015282828a010152016128c1565b90815181101561286757016020019056fea2646970667358221220decf3f55cd7ff0626d975a9193e6acce36bd91f2452135ad4a1cfd305a85a4df64736f6c634300081c0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCaller) CheckClaim(opts *bind.CallOpts, pk BCSIDG1Point, attribute string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "CheckClaim", pk, attribute)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCallerSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractCaller) GetConfirmResult(opts *bind.CallOpts, _sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetConfirmResult", _sellerAddr, _buyerAddr, _orderID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractSession) GetConfirmResult(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	return _Contract.Contract.GetConfirmResult(&_Contract.CallOpts, _sellerAddr, _buyerAddr, _orderID)
}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractCallerSession) GetConfirmResult(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	return _Contract.Contract.GetConfirmResult(&_Contract.CallOpts, _sellerAddr, _buyerAddr, _orderID)
}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractCaller) GetCurrentSite(opts *bind.CallOpts, _orderID string) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetCurrentSite", _orderID)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractSession) GetCurrentSite(_orderID string) (string, error) {
	return _Contract.Contract.GetCurrentSite(&_Contract.CallOpts, _orderID)
}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractCallerSession) GetCurrentSite(_orderID string) (string, error) {
	return _Contract.Contract.GetCurrentSite(&_Contract.CallOpts, _orderID)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetMapping(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetMapping", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCaller) GetPointKey(opts *bind.CallOpts, pk BCSIDG1Point) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetPointKey", pk)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCallerSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractCaller) GetProduct(opts *bind.CallOpts, _addr common.Address, _productID string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetProduct", _addr, _productID)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractSession) GetProduct(_addr common.Address, _productID string) (*big.Int, error) {
	return _Contract.Contract.GetProduct(&_Contract.CallOpts, _addr, _productID)
}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractCallerSession) GetProduct(_addr common.Address, _productID string) (*big.Int, error) {
	return _Contract.Contract.GetProduct(&_Contract.CallOpts, _addr, _productID)
}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractCaller) GetSN(opts *bind.CallOpts, _orderID string) (BCSIDG1Point, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetSN", _orderID)

	if err != nil {
		return *new(BCSIDG1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BCSIDG1Point)).(*BCSIDG1Point)

	return out0, err

}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractSession) GetSN(_orderID string) (BCSIDG1Point, error) {
	return _Contract.Contract.GetSN(&_Contract.CallOpts, _orderID)
}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractCallerSession) GetSN(_orderID string) (BCSIDG1Point, error) {
	return _Contract.Contract.GetSN(&_Contract.CallOpts, _orderID)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCaller) SID(opts *bind.CallOpts, arg0 [32]byte) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "SID", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCallerSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractCaller) VerifyCode(opts *bind.CallOpts, _orderID string, _code string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "VerifyCode", _orderID, _code)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractSession) VerifyCode(_orderID string, _code string) (bool, error) {
	return _Contract.Contract.VerifyCode(&_Contract.CallOpts, _orderID, _code)
}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractCallerSession) VerifyCode(_orderID string, _code string) (bool, error) {
	return _Contract.Contract.VerifyCode(&_Contract.CallOpts, _orderID, _code)
}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractCaller) GetBalanceOf(opts *bind.CallOpts, seller common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getBalanceOf", seller)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractSession) GetBalanceOf(seller common.Address) (*big.Int, error) {
	return _Contract.Contract.GetBalanceOf(&_Contract.CallOpts, seller)
}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractCallerSession) GetBalanceOf(seller common.Address) (*big.Int, error) {
	return _Contract.Contract.GetBalanceOf(&_Contract.CallOpts, seller)
}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCaller) GetOrder(opts *bind.CallOpts, _seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID      string
	OrderID        string
	Quantity       *big.Int
	Price          *big.Int
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getOrder", _seller, _buyer, _orderID)

	outstruct := new(struct {
		ProductID      string
		OrderID        string
		Quantity       *big.Int
		Price          *big.Int
		IsOngoing      bool
		IsLocked       bool
		IsBuyerConfirm bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.OrderID = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.IsOngoing = *abi.ConvertType(out[4], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[5], new(bool)).(*bool)
	outstruct.IsBuyerConfirm = *abi.ConvertType(out[6], new(bool)).(*bool)

	return *outstruct, err

}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractSession) GetOrder(_seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID      string
	OrderID        string
	Quantity       *big.Int
	Price          *big.Int
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.GetOrder(&_Contract.CallOpts, _seller, _buyer, _orderID)
}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCallerSession) GetOrder(_seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID      string
	OrderID        string
	Quantity       *big.Int
	Price          *big.Int
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.GetOrder(&_Contract.CallOpts, _seller, _buyer, _orderID)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetSID(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getSID", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractCaller) IsG2Zero(opts *bind.CallOpts, point2 BCSIDG2Point) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "isG2Zero", point2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractSession) IsG2Zero(point2 BCSIDG2Point) (bool, error) {
	return _Contract.Contract.IsG2Zero(&_Contract.CallOpts, point2)
}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractCallerSession) IsG2Zero(point2 BCSIDG2Point) (bool, error) {
	return _Contract.Contract.IsG2Zero(&_Contract.CallOpts, point2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCaller) OrderBook(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderBook", arg0, arg1, arg2)

	outstruct := new(struct {
		ProductID      string
		Quantity       *big.Int
		Price          *big.Int
		OrderID        string
		LockedAmount   *big.Int
		BuyerPubKey    BCSIDG1Point
		IsOngoing      bool
		IsLocked       bool
		IsBuyerConfirm bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.OrderID = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.LockedAmount = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.BuyerPubKey = *abi.ConvertType(out[5], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[6], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[7], new(bool)).(*bool)
	outstruct.IsBuyerConfirm = *abi.ConvertType(out[8], new(bool)).(*bool)

	return *outstruct, err

}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCallerSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractCaller) OrderLogistics(opts *bind.CallOpts, arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderLogistics", arg0)

	outstruct := new(struct {
		BuyerPubKey BCSIDG1Point
		IsOngoing   bool
		CurrentSite string
		Code        *big.Int
		SN          BCSIDG1Point
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.BuyerPubKey = *abi.ConvertType(out[0], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[1], new(bool)).(*bool)
	outstruct.CurrentSite = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Code = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.SN = *abi.ConvertType(out[4], new(BCSIDG1Point)).(*BCSIDG1Point)

	return *outstruct, err

}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractSession) OrderLogistics(arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	return _Contract.Contract.OrderLogistics(&_Contract.CallOpts, arg0)
}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractCallerSession) OrderLogistics(arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	return _Contract.Contract.OrderLogistics(&_Contract.CallOpts, arg0)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCaller) ProductPrices(opts *bind.CallOpts, arg0 common.Address, arg1 string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "productPrices", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCallerSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractCaller) StringToUint256(opts *bind.CallOpts, attribute string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "stringToUint256", attribute)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractSession) StringToUint256(attribute string) (*big.Int, error) {
	return _Contract.Contract.StringToUint256(&_Contract.CallOpts, attribute)
}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractCallerSession) StringToUint256(attribute string) (*big.Int, error) {
	return _Contract.Contract.StringToUint256(&_Contract.CallOpts, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactor) AddMapping(opts *bind.TransactOpts, pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "AddMapping", pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactorSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractTransactor) CreateLogisticsOrder(opts *bind.TransactOpts, _sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "CreateLogisticsOrder", _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractSession) CreateLogisticsOrder(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.CreateLogisticsOrder(&_Contract.TransactOpts, _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractTransactorSession) CreateLogisticsOrder(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.CreateLogisticsOrder(&_Contract.TransactOpts, _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x16d2e333.
//
// Solidity: function DLEQVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) g2, (uint256,uint256) y2, (uint256,uint256) a2, (uint256,uint256) g3, (uint256,uint256) y3, (uint256,uint256) a3, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, g2 BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, g3 BCSIDG1Point, y3 BCSIDG1Point, a3 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g1, y1, a1, g2, y2, a2, g3, y3, a3, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x16d2e333.
//
// Solidity: function DLEQVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) g2, (uint256,uint256) y2, (uint256,uint256) a2, (uint256,uint256) g3, (uint256,uint256) y3, (uint256,uint256) a3, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, g2 BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, g3 BCSIDG1Point, y3 BCSIDG1Point, a3 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g1, y1, a1, g2, y2, a2, g3, y3, a3, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x16d2e333.
//
// Solidity: function DLEQVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) g2, (uint256,uint256) y2, (uint256,uint256) a2, (uint256,uint256) g3, (uint256,uint256) y3, (uint256,uint256) a3, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, g2 BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, g3 BCSIDG1Point, y3 BCSIDG1Point, a3 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g1, y1, a1, g2, y2, a2, g3, y3, a3, c, z)
}

// RegisterSID is a paid mutator transaction binding the contract method 0xfeaa778e.
//
// Solidity: function RegisterSID((uint256,uint256) _pk1, (uint256[2],uint256[2]) _pk2, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractTransactor) RegisterSID(opts *bind.TransactOpts, _pk1 BCSIDG1Point, _pk2 BCSIDG2Point, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "RegisterSID", _pk1, _pk2, _u, _s, _m, _attr)
}

// RegisterSID is a paid mutator transaction binding the contract method 0xfeaa778e.
//
// Solidity: function RegisterSID((uint256,uint256) _pk1, (uint256[2],uint256[2]) _pk2, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractSession) RegisterSID(_pk1 BCSIDG1Point, _pk2 BCSIDG2Point, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.Contract.RegisterSID(&_Contract.TransactOpts, _pk1, _pk2, _u, _s, _m, _attr)
}

// RegisterSID is a paid mutator transaction binding the contract method 0xfeaa778e.
//
// Solidity: function RegisterSID((uint256,uint256) _pk1, (uint256[2],uint256[2]) _pk2, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractTransactorSession) RegisterSID(_pk1 BCSIDG1Point, _pk2 BCSIDG2Point, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.Contract.RegisterSID(&_Contract.TransactOpts, _pk1, _pk2, _u, _s, _m, _attr)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractTransactor) UpdateStatus(opts *bind.TransactOpts, _orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UpdateStatus", _orderID, _siteID)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractSession) UpdateStatus(_orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.Contract.UpdateStatus(&_Contract.TransactOpts, _orderID, _siteID)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractTransactorSession) UpdateStatus(_orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.Contract.UpdateStatus(&_Contract.TransactOpts, _orderID, _siteID)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractTransactor) UploadACsParams(opts *bind.TransactOpts, _g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadACsParams", _g1, _g2, _pkx, _pky)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractSession) UploadACsParams(_g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadACsParams(&_Contract.TransactOpts, _g1, _g2, _pkx, _pky)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractTransactorSession) UploadACsParams(_g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadACsParams(&_Contract.TransactOpts, _g1, _g2, _pkx, _pky)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactor) BuyerCancelOrder(opts *bind.TransactOpts, _seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCancelOrder", _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactorSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactor) BuyerConfirmWithCode(opts *bind.TransactOpts, _seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerConfirmWithCode", _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactorSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractTransactor) BuyerCreateOrder(opts *bind.TransactOpts, _seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCreateOrder", _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractTransactorSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractTransactor) SellerAcceptOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerAcceptOrder", _buyer, _orderID, attribute)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractTransactorSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactor) SellerCancelOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerCancelOrder", _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactorSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactor) SetProductPrice(opts *bind.TransactOpts, productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setProductPrice", productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactorSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) payable returns()
func (_Contract *ContractTransactor) WithdrawPayment(opts *bind.TransactOpts, _buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "withdrawPayment", _buyerAddr, _orderID)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) payable returns()
func (_Contract *ContractSession) WithdrawPayment(_buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts, _buyerAddr, _orderID)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) payable returns()
func (_Contract *ContractTransactorSession) WithdrawPayment(_buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts, _buyerAddr, _orderID)
}

// ContractBroadcastPubKeyIterator is returned from FilterBroadcastPubKey and is used to iterate over the raw logs and unpacked data for BroadcastPubKey events raised by the Contract contract.
type ContractBroadcastPubKeyIterator struct {
	Event *ContractBroadcastPubKey // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBroadcastPubKeyIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBroadcastPubKey)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBroadcastPubKey)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBroadcastPubKeyIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBroadcastPubKeyIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBroadcastPubKey represents a BroadcastPubKey event raised by the Contract contract.
type ContractBroadcastPubKey struct {
	Seller       common.Address
	Buyer        common.Address
	ProductID    string
	Quantity     *big.Int
	BuyerPubKeyX *big.Int
	BuyerPubKeyY *big.Int
	TotalPrice   *big.Int
	OrderID      string
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterBroadcastPubKey is a free log retrieval operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) FilterBroadcastPubKey(opts *bind.FilterOpts, _seller []common.Address, _buyer []common.Address) (*ContractBroadcastPubKeyIterator, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractBroadcastPubKeyIterator{contract: _Contract.contract, event: "BroadcastPubKey", logs: logs, sub: sub}, nil
}

// WatchBroadcastPubKey is a free log subscription operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) WatchBroadcastPubKey(opts *bind.WatchOpts, sink chan<- *ContractBroadcastPubKey, _seller []common.Address, _buyer []common.Address) (event.Subscription, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBroadcastPubKey)
				if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBroadcastPubKey is a log parse operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) ParseBroadcastPubKey(log types.Log) (*ContractBroadcastPubKey, error) {
	event := new(ContractBroadcastPubKey)
	if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOrderCompletedIterator is returned from FilterOrderCompleted and is used to iterate over the raw logs and unpacked data for OrderCompleted events raised by the Contract contract.
type ContractOrderCompletedIterator struct {
	Event *ContractOrderCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOrderCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOrderCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOrderCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOrderCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOrderCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOrderCompleted represents a OrderCompleted event raised by the Contract contract.
type ContractOrderCompleted struct {
	Buyer  common.Address
	Seller common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterOrderCompleted is a free log retrieval operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) FilterOrderCompleted(opts *bind.FilterOpts, buyer []common.Address, seller []common.Address) (*ContractOrderCompletedIterator, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return &ContractOrderCompletedIterator{contract: _Contract.contract, event: "OrderCompleted", logs: logs, sub: sub}, nil
}

// WatchOrderCompleted is a free log subscription operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) WatchOrderCompleted(opts *bind.WatchOpts, sink chan<- *ContractOrderCompleted, buyer []common.Address, seller []common.Address) (event.Subscription, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOrderCompleted)
				if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderCompleted is a log parse operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) ParseOrderCompleted(log types.Log) (*ContractOrderCompleted, error) {
	event := new(ContractOrderCompleted)
	if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerAcceptedIterator is returned from FilterSellerAccepted and is used to iterate over the raw logs and unpacked data for SellerAccepted events raised by the Contract contract.
type ContractSellerAcceptedIterator struct {
	Event *ContractSellerAccepted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerAcceptedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerAccepted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerAccepted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerAcceptedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerAcceptedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerAccepted represents a SellerAccepted event raised by the Contract contract.
type ContractSellerAccepted struct {
	Seller  common.Address
	Buyer   common.Address
	OrderID string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerAccepted is a free log retrieval operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) FilterSellerAccepted(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerAcceptedIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerAcceptedIterator{contract: _Contract.contract, event: "SellerAccepted", logs: logs, sub: sub}, nil
}

// WatchSellerAccepted is a free log subscription operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) WatchSellerAccepted(opts *bind.WatchOpts, sink chan<- *ContractSellerAccepted, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerAccepted)
				if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerAccepted is a log parse operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) ParseSellerAccepted(log types.Log) (*ContractSellerAccepted, error) {
	event := new(ContractSellerAccepted)
	if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerGetPaymentIterator is returned from FilterSellerGetPayment and is used to iterate over the raw logs and unpacked data for SellerGetPayment events raised by the Contract contract.
type ContractSellerGetPaymentIterator struct {
	Event *ContractSellerGetPayment // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerGetPaymentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerGetPayment)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerGetPayment)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerGetPaymentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerGetPaymentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerGetPayment represents a SellerGetPayment event raised by the Contract contract.
type ContractSellerGetPayment struct {
	Seller  common.Address
	Buyer   common.Address
	OrderID string
	Payment *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerGetPayment is a free log retrieval operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) FilterSellerGetPayment(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerGetPaymentIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerGetPayment", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerGetPaymentIterator{contract: _Contract.contract, event: "SellerGetPayment", logs: logs, sub: sub}, nil
}

// WatchSellerGetPayment is a free log subscription operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) WatchSellerGetPayment(opts *bind.WatchOpts, sink chan<- *ContractSellerGetPayment, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerGetPayment", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerGetPayment)
				if err := _Contract.contract.UnpackLog(event, "SellerGetPayment", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerGetPayment is a log parse operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) ParseSellerGetPayment(log types.Log) (*ContractSellerGetPayment, error) {
	event := new(ContractSellerGetPayment)
	if err := _Contract.contract.UnpackLog(event, "SellerGetPayment", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
