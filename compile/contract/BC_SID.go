// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BCSIDG1Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG1Point struct {
	X *big.Int
	Y *big.Int
}

// BCSIDG2Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BroadcastPubKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pubKeyX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pubKeyY\",\"type\":\"uint256\"}],\"name\":\"SellerAccepted\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"AddMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"CheckClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pt1xx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1xy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2xx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2xy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2yx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2yy\",\"type\":\"uint256\"}],\"name\":\"ECTwistAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1xx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1xy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yy\",\"type\":\"uint256\"}],\"name\":\"ECTwistMul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetFieldModulus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetMapping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetPointKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetProofResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"pkx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"pky\",\"type\":\"tuple\"}],\"name\":\"UploadAcsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"g2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"g3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"challenge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"response1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"response2\",\"type\":\"uint256\"}],\"name\":\"VerifyPiV\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"pk2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"pk2x\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"pk2y\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"w\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_u\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rm\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_s\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"claim\",\"type\":\"string\"}],\"name\":\"VerifyProof1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_c\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"c\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"challenge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"response\",\"type\":\"uint256\"}],\"name\":\"VerifyProof2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"buyerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationCode\",\"type\":\"string\"}],\"name\":\"buyerConfirmWithCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_buyerPK\",\"type\":\"tuple\"}],\"name\":\"buyerCreateOrder\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"getSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"sellerPubKey\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"productPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_pubKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pubKeyY\",\"type\":\"uint256\"}],\"name\":\"sellerAcceptOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"sellerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCaller) CheckClaim(opts *bind.CallOpts, pk BCSIDG1Point, attribute string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "CheckClaim", pk, attribute)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCallerSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// ECTwistAdd is a free data retrieval call binding the contract method 0x61a931ec.
//
// Solidity: function ECTwistAdd(uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy, uint256 pt2xx, uint256 pt2xy, uint256 pt2yx, uint256 pt2yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCaller) ECTwistAdd(opts *bind.CallOpts, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int, pt2xx *big.Int, pt2xy *big.Int, pt2yx *big.Int, pt2yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "ECTwistAdd", pt1xx, pt1xy, pt1yx, pt1yy, pt2xx, pt2xy, pt2yx, pt2yy)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return out0, out1, out2, out3, err

}

// ECTwistAdd is a free data retrieval call binding the contract method 0x61a931ec.
//
// Solidity: function ECTwistAdd(uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy, uint256 pt2xx, uint256 pt2xy, uint256 pt2yx, uint256 pt2yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractSession) ECTwistAdd(pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int, pt2xx *big.Int, pt2xy *big.Int, pt2yx *big.Int, pt2yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistAdd(&_Contract.CallOpts, pt1xx, pt1xy, pt1yx, pt1yy, pt2xx, pt2xy, pt2yx, pt2yy)
}

// ECTwistAdd is a free data retrieval call binding the contract method 0x61a931ec.
//
// Solidity: function ECTwistAdd(uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy, uint256 pt2xx, uint256 pt2xy, uint256 pt2yx, uint256 pt2yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCallerSession) ECTwistAdd(pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int, pt2xx *big.Int, pt2xy *big.Int, pt2yx *big.Int, pt2yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistAdd(&_Contract.CallOpts, pt1xx, pt1xy, pt1yx, pt1yy, pt2xx, pt2xy, pt2yx, pt2yy)
}

// ECTwistMul is a free data retrieval call binding the contract method 0xb73ab75d.
//
// Solidity: function ECTwistMul(uint256 s, uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCaller) ECTwistMul(opts *bind.CallOpts, s *big.Int, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "ECTwistMul", s, pt1xx, pt1xy, pt1yx, pt1yy)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return out0, out1, out2, out3, err

}

// ECTwistMul is a free data retrieval call binding the contract method 0xb73ab75d.
//
// Solidity: function ECTwistMul(uint256 s, uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractSession) ECTwistMul(s *big.Int, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistMul(&_Contract.CallOpts, s, pt1xx, pt1xy, pt1yx, pt1yy)
}

// ECTwistMul is a free data retrieval call binding the contract method 0xb73ab75d.
//
// Solidity: function ECTwistMul(uint256 s, uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCallerSession) ECTwistMul(s *big.Int, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistMul(&_Contract.CallOpts, s, pt1xx, pt1xy, pt1yx, pt1yy)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCaller) GetFieldModulus(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetFieldModulus")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCallerSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetMapping(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetMapping", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCaller) GetPointKey(opts *bind.CallOpts, pk BCSIDG1Point) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetPointKey", pk)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCallerSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetProofResult is a free data retrieval call binding the contract method 0x76646bfb.
//
// Solidity: function GetProofResult() view returns(bool)
func (_Contract *ContractCaller) GetProofResult(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetProofResult")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetProofResult is a free data retrieval call binding the contract method 0x76646bfb.
//
// Solidity: function GetProofResult() view returns(bool)
func (_Contract *ContractSession) GetProofResult() (bool, error) {
	return _Contract.Contract.GetProofResult(&_Contract.CallOpts)
}

// GetProofResult is a free data retrieval call binding the contract method 0x76646bfb.
//
// Solidity: function GetProofResult() view returns(bool)
func (_Contract *ContractCallerSession) GetProofResult() (bool, error) {
	return _Contract.Contract.GetProofResult(&_Contract.CallOpts)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCaller) SID(opts *bind.CallOpts, arg0 [32]byte) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "SID", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCallerSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetSID(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getSID", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, uint256 lockedAmount, (uint256,uint256) sellerPubKey, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked)
func (_Contract *ContractCaller) OrderBook(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID    string
	Quantity     *big.Int
	Price        *big.Int
	LockedAmount *big.Int
	SellerPubKey BCSIDG1Point
	BuyerPubKey  BCSIDG1Point
	IsOngoing    bool
	IsLocked     bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderBook", arg0, arg1, arg2)

	outstruct := new(struct {
		ProductID    string
		Quantity     *big.Int
		Price        *big.Int
		LockedAmount *big.Int
		SellerPubKey BCSIDG1Point
		BuyerPubKey  BCSIDG1Point
		IsOngoing    bool
		IsLocked     bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.LockedAmount = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.SellerPubKey = *abi.ConvertType(out[4], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.BuyerPubKey = *abi.ConvertType(out[5], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[6], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[7], new(bool)).(*bool)

	return *outstruct, err

}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, uint256 lockedAmount, (uint256,uint256) sellerPubKey, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked)
func (_Contract *ContractSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID    string
	Quantity     *big.Int
	Price        *big.Int
	LockedAmount *big.Int
	SellerPubKey BCSIDG1Point
	BuyerPubKey  BCSIDG1Point
	IsOngoing    bool
	IsLocked     bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, uint256 lockedAmount, (uint256,uint256) sellerPubKey, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked)
func (_Contract *ContractCallerSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID    string
	Quantity     *big.Int
	Price        *big.Int
	LockedAmount *big.Int
	SellerPubKey BCSIDG1Point
	BuyerPubKey  BCSIDG1Point
	IsOngoing    bool
	IsLocked     bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCaller) ProductPrices(opts *bind.CallOpts, arg0 common.Address, arg1 string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "productPrices", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCallerSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactor) AddMapping(opts *bind.TransactOpts, pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "AddMapping", pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactorSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, h BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, h BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, h BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// UploadAcsParams is a paid mutator transaction binding the contract method 0x54574d44.
//
// Solidity: function UploadAcsParams((uint256,uint256) g, (uint256[2],uint256[2]) pkx, (uint256[2],uint256[2]) pky) returns()
func (_Contract *ContractTransactor) UploadAcsParams(opts *bind.TransactOpts, g BCSIDG1Point, pkx BCSIDG2Point, pky BCSIDG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadAcsParams", g, pkx, pky)
}

// UploadAcsParams is a paid mutator transaction binding the contract method 0x54574d44.
//
// Solidity: function UploadAcsParams((uint256,uint256) g, (uint256[2],uint256[2]) pkx, (uint256[2],uint256[2]) pky) returns()
func (_Contract *ContractSession) UploadAcsParams(g BCSIDG1Point, pkx BCSIDG2Point, pky BCSIDG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadAcsParams(&_Contract.TransactOpts, g, pkx, pky)
}

// UploadAcsParams is a paid mutator transaction binding the contract method 0x54574d44.
//
// Solidity: function UploadAcsParams((uint256,uint256) g, (uint256[2],uint256[2]) pkx, (uint256[2],uint256[2]) pky) returns()
func (_Contract *ContractTransactorSession) UploadAcsParams(g BCSIDG1Point, pkx BCSIDG2Point, pky BCSIDG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadAcsParams(&_Contract.TransactOpts, g, pkx, pky)
}

// VerifyPiV is a paid mutator transaction binding the contract method 0x38691545.
//
// Solidity: function VerifyPiV((uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) g2, (uint256[2],uint256[2]) g3, (uint256[2],uint256[2]) y1, (uint256[2],uint256[2]) a, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) b, uint256 challenge, uint256 response1, uint256 response2) returns(bool)
func (_Contract *ContractTransactor) VerifyPiV(opts *bind.TransactOpts, g1 BCSIDG2Point, g2 BCSIDG2Point, g3 BCSIDG2Point, y1 BCSIDG2Point, a BCSIDG2Point, h BCSIDG1Point, y2 BCSIDG1Point, b BCSIDG1Point, challenge *big.Int, response1 *big.Int, response2 *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VerifyPiV", g1, g2, g3, y1, a, h, y2, b, challenge, response1, response2)
}

// VerifyPiV is a paid mutator transaction binding the contract method 0x38691545.
//
// Solidity: function VerifyPiV((uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) g2, (uint256[2],uint256[2]) g3, (uint256[2],uint256[2]) y1, (uint256[2],uint256[2]) a, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) b, uint256 challenge, uint256 response1, uint256 response2) returns(bool)
func (_Contract *ContractSession) VerifyPiV(g1 BCSIDG2Point, g2 BCSIDG2Point, g3 BCSIDG2Point, y1 BCSIDG2Point, a BCSIDG2Point, h BCSIDG1Point, y2 BCSIDG1Point, b BCSIDG1Point, challenge *big.Int, response1 *big.Int, response2 *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.VerifyPiV(&_Contract.TransactOpts, g1, g2, g3, y1, a, h, y2, b, challenge, response1, response2)
}

// VerifyPiV is a paid mutator transaction binding the contract method 0x38691545.
//
// Solidity: function VerifyPiV((uint256[2],uint256[2]) g1, (uint256[2],uint256[2]) g2, (uint256[2],uint256[2]) g3, (uint256[2],uint256[2]) y1, (uint256[2],uint256[2]) a, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) b, uint256 challenge, uint256 response1, uint256 response2) returns(bool)
func (_Contract *ContractTransactorSession) VerifyPiV(g1 BCSIDG2Point, g2 BCSIDG2Point, g3 BCSIDG2Point, y1 BCSIDG2Point, a BCSIDG2Point, h BCSIDG1Point, y2 BCSIDG1Point, b BCSIDG1Point, challenge *big.Int, response1 *big.Int, response2 *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.VerifyPiV(&_Contract.TransactOpts, g1, g2, g3, y1, a, h, y2, b, challenge, response1, response2)
}

// VerifyProof1 is a paid mutator transaction binding the contract method 0xe0d0e2f2.
//
// Solidity: function VerifyProof1((uint256,uint256) pk1, (uint256[2],uint256[2]) pk2, (uint256[2],uint256[2]) pk2x, (uint256[2],uint256[2]) pk2y, (uint256[2],uint256[2]) w, (uint256[2],uint256[2]) a, (uint256,uint256) _u, (uint256,uint256) v, (uint256,uint256) b, uint256 c, uint256 rr, uint256 rm, (uint256,uint256) _s, string claim) returns(bool)
func (_Contract *ContractTransactor) VerifyProof1(opts *bind.TransactOpts, pk1 BCSIDG1Point, pk2 BCSIDG2Point, pk2x BCSIDG2Point, pk2y BCSIDG2Point, w BCSIDG2Point, a BCSIDG2Point, _u BCSIDG1Point, v BCSIDG1Point, b BCSIDG1Point, c *big.Int, rr *big.Int, rm *big.Int, _s BCSIDG1Point, claim string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VerifyProof1", pk1, pk2, pk2x, pk2y, w, a, _u, v, b, c, rr, rm, _s, claim)
}

// VerifyProof1 is a paid mutator transaction binding the contract method 0xe0d0e2f2.
//
// Solidity: function VerifyProof1((uint256,uint256) pk1, (uint256[2],uint256[2]) pk2, (uint256[2],uint256[2]) pk2x, (uint256[2],uint256[2]) pk2y, (uint256[2],uint256[2]) w, (uint256[2],uint256[2]) a, (uint256,uint256) _u, (uint256,uint256) v, (uint256,uint256) b, uint256 c, uint256 rr, uint256 rm, (uint256,uint256) _s, string claim) returns(bool)
func (_Contract *ContractSession) VerifyProof1(pk1 BCSIDG1Point, pk2 BCSIDG2Point, pk2x BCSIDG2Point, pk2y BCSIDG2Point, w BCSIDG2Point, a BCSIDG2Point, _u BCSIDG1Point, v BCSIDG1Point, b BCSIDG1Point, c *big.Int, rr *big.Int, rm *big.Int, _s BCSIDG1Point, claim string) (*types.Transaction, error) {
	return _Contract.Contract.VerifyProof1(&_Contract.TransactOpts, pk1, pk2, pk2x, pk2y, w, a, _u, v, b, c, rr, rm, _s, claim)
}

// VerifyProof1 is a paid mutator transaction binding the contract method 0xe0d0e2f2.
//
// Solidity: function VerifyProof1((uint256,uint256) pk1, (uint256[2],uint256[2]) pk2, (uint256[2],uint256[2]) pk2x, (uint256[2],uint256[2]) pk2y, (uint256[2],uint256[2]) w, (uint256[2],uint256[2]) a, (uint256,uint256) _u, (uint256,uint256) v, (uint256,uint256) b, uint256 c, uint256 rr, uint256 rm, (uint256,uint256) _s, string claim) returns(bool)
func (_Contract *ContractTransactorSession) VerifyProof1(pk1 BCSIDG1Point, pk2 BCSIDG2Point, pk2x BCSIDG2Point, pk2y BCSIDG2Point, w BCSIDG2Point, a BCSIDG2Point, _u BCSIDG1Point, v BCSIDG1Point, b BCSIDG1Point, c *big.Int, rr *big.Int, rm *big.Int, _s BCSIDG1Point, claim string) (*types.Transaction, error) {
	return _Contract.Contract.VerifyProof1(&_Contract.TransactOpts, pk1, pk2, pk2x, pk2y, w, a, _u, v, b, c, rr, rm, _s, claim)
}

// VerifyProof2 is a paid mutator transaction binding the contract method 0xbf62676b.
//
// Solidity: function VerifyProof2((uint256,uint256) _c, (uint256,uint256) v, (uint256,uint256) a1, (uint256,uint256) pk1, (uint256,uint256) c, (uint256,uint256) a2, uint256 challenge, uint256 response) returns(bool)
func (_Contract *ContractTransactor) VerifyProof2(opts *bind.TransactOpts, _c BCSIDG1Point, v BCSIDG1Point, a1 BCSIDG1Point, pk1 BCSIDG1Point, c BCSIDG1Point, a2 BCSIDG1Point, challenge *big.Int, response *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VerifyProof2", _c, v, a1, pk1, c, a2, challenge, response)
}

// VerifyProof2 is a paid mutator transaction binding the contract method 0xbf62676b.
//
// Solidity: function VerifyProof2((uint256,uint256) _c, (uint256,uint256) v, (uint256,uint256) a1, (uint256,uint256) pk1, (uint256,uint256) c, (uint256,uint256) a2, uint256 challenge, uint256 response) returns(bool)
func (_Contract *ContractSession) VerifyProof2(_c BCSIDG1Point, v BCSIDG1Point, a1 BCSIDG1Point, pk1 BCSIDG1Point, c BCSIDG1Point, a2 BCSIDG1Point, challenge *big.Int, response *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.VerifyProof2(&_Contract.TransactOpts, _c, v, a1, pk1, c, a2, challenge, response)
}

// VerifyProof2 is a paid mutator transaction binding the contract method 0xbf62676b.
//
// Solidity: function VerifyProof2((uint256,uint256) _c, (uint256,uint256) v, (uint256,uint256) a1, (uint256,uint256) pk1, (uint256,uint256) c, (uint256,uint256) a2, uint256 challenge, uint256 response) returns(bool)
func (_Contract *ContractTransactorSession) VerifyProof2(_c BCSIDG1Point, v BCSIDG1Point, a1 BCSIDG1Point, pk1 BCSIDG1Point, c BCSIDG1Point, a2 BCSIDG1Point, challenge *big.Int, response *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.VerifyProof2(&_Contract.TransactOpts, _c, v, a1, pk1, c, a2, challenge, response)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactor) BuyerCancelOrder(opts *bind.TransactOpts, _seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCancelOrder", _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactorSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactor) BuyerConfirmWithCode(opts *bind.TransactOpts, _seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerConfirmWithCode", _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactorSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractTransactor) BuyerCreateOrder(opts *bind.TransactOpts, _seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCreateOrder", _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns(string)
func (_Contract *ContractTransactorSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0xf674bc0d.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute, uint256 _pubKeyX, uint256 _pubKeyY) returns()
func (_Contract *ContractTransactor) SellerAcceptOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string, attribute string, _pubKeyX *big.Int, _pubKeyY *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerAcceptOrder", _buyer, _orderID, attribute, _pubKeyX, _pubKeyY)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0xf674bc0d.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute, uint256 _pubKeyX, uint256 _pubKeyY) returns()
func (_Contract *ContractSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string, _pubKeyX *big.Int, _pubKeyY *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute, _pubKeyX, _pubKeyY)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0xf674bc0d.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute, uint256 _pubKeyX, uint256 _pubKeyY) returns()
func (_Contract *ContractTransactorSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string, _pubKeyX *big.Int, _pubKeyY *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute, _pubKeyX, _pubKeyY)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactor) SellerCancelOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerCancelOrder", _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactorSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactor) SetProductPrice(opts *bind.TransactOpts, productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setProductPrice", productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactorSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0xa118babd.
//
// Solidity: function withdrawPayment() returns()
func (_Contract *ContractTransactor) WithdrawPayment(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "withdrawPayment")
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0xa118babd.
//
// Solidity: function withdrawPayment() returns()
func (_Contract *ContractSession) WithdrawPayment() (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0xa118babd.
//
// Solidity: function withdrawPayment() returns()
func (_Contract *ContractTransactorSession) WithdrawPayment() (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts)
}

// ContractBroadcastPubKeyIterator is returned from FilterBroadcastPubKey and is used to iterate over the raw logs and unpacked data for BroadcastPubKey events raised by the Contract contract.
type ContractBroadcastPubKeyIterator struct {
	Event *ContractBroadcastPubKey // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBroadcastPubKeyIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBroadcastPubKey)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBroadcastPubKey)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBroadcastPubKeyIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBroadcastPubKeyIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBroadcastPubKey represents a BroadcastPubKey event raised by the Contract contract.
type ContractBroadcastPubKey struct {
	Seller       common.Address
	Buyer        common.Address
	ProductID    string
	Quantity     *big.Int
	BuyerPubKeyX *big.Int
	BuyerPubKeyY *big.Int
	Price        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterBroadcastPubKey is a free log retrieval operation binding the contract event 0xdcbd7c07207946ef853eed51b3768d1b879343d5431c91796e75c3707ca30c96.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 price)
func (_Contract *ContractFilterer) FilterBroadcastPubKey(opts *bind.FilterOpts, _seller []common.Address, _buyer []common.Address) (*ContractBroadcastPubKeyIterator, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractBroadcastPubKeyIterator{contract: _Contract.contract, event: "BroadcastPubKey", logs: logs, sub: sub}, nil
}

// WatchBroadcastPubKey is a free log subscription operation binding the contract event 0xdcbd7c07207946ef853eed51b3768d1b879343d5431c91796e75c3707ca30c96.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 price)
func (_Contract *ContractFilterer) WatchBroadcastPubKey(opts *bind.WatchOpts, sink chan<- *ContractBroadcastPubKey, _seller []common.Address, _buyer []common.Address) (event.Subscription, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBroadcastPubKey)
				if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBroadcastPubKey is a log parse operation binding the contract event 0xdcbd7c07207946ef853eed51b3768d1b879343d5431c91796e75c3707ca30c96.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 price)
func (_Contract *ContractFilterer) ParseBroadcastPubKey(log types.Log) (*ContractBroadcastPubKey, error) {
	event := new(ContractBroadcastPubKey)
	if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOrderCompletedIterator is returned from FilterOrderCompleted and is used to iterate over the raw logs and unpacked data for OrderCompleted events raised by the Contract contract.
type ContractOrderCompletedIterator struct {
	Event *ContractOrderCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOrderCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOrderCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOrderCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOrderCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOrderCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOrderCompleted represents a OrderCompleted event raised by the Contract contract.
type ContractOrderCompleted struct {
	Buyer  common.Address
	Seller common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterOrderCompleted is a free log retrieval operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) FilterOrderCompleted(opts *bind.FilterOpts, buyer []common.Address, seller []common.Address) (*ContractOrderCompletedIterator, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return &ContractOrderCompletedIterator{contract: _Contract.contract, event: "OrderCompleted", logs: logs, sub: sub}, nil
}

// WatchOrderCompleted is a free log subscription operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) WatchOrderCompleted(opts *bind.WatchOpts, sink chan<- *ContractOrderCompleted, buyer []common.Address, seller []common.Address) (event.Subscription, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOrderCompleted)
				if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderCompleted is a log parse operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) ParseOrderCompleted(log types.Log) (*ContractOrderCompleted, error) {
	event := new(ContractOrderCompleted)
	if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerAcceptedIterator is returned from FilterSellerAccepted and is used to iterate over the raw logs and unpacked data for SellerAccepted events raised by the Contract contract.
type ContractSellerAcceptedIterator struct {
	Event *ContractSellerAccepted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerAcceptedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerAccepted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerAccepted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerAcceptedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerAcceptedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerAccepted represents a SellerAccepted event raised by the Contract contract.
type ContractSellerAccepted struct {
	Seller  common.Address
	Buyer   common.Address
	PubKeyX *big.Int
	PubKeyY *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerAccepted is a free log retrieval operation binding the contract event 0x27d205a81fd6d8807678c8cf4f1cacce8e8cb6b464dd3b0c4a5f5affaa4ceca9.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, uint256 pubKeyX, uint256 pubKeyY)
func (_Contract *ContractFilterer) FilterSellerAccepted(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerAcceptedIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerAcceptedIterator{contract: _Contract.contract, event: "SellerAccepted", logs: logs, sub: sub}, nil
}

// WatchSellerAccepted is a free log subscription operation binding the contract event 0x27d205a81fd6d8807678c8cf4f1cacce8e8cb6b464dd3b0c4a5f5affaa4ceca9.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, uint256 pubKeyX, uint256 pubKeyY)
func (_Contract *ContractFilterer) WatchSellerAccepted(opts *bind.WatchOpts, sink chan<- *ContractSellerAccepted, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerAccepted)
				if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerAccepted is a log parse operation binding the contract event 0x27d205a81fd6d8807678c8cf4f1cacce8e8cb6b464dd3b0c4a5f5affaa4ceca9.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, uint256 pubKeyX, uint256 pubKeyY)
func (_Contract *ContractFilterer) ParseSellerAccepted(log types.Log) (*ContractSellerAccepted, error) {
	event := new(ContractSellerAccepted)
	if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
