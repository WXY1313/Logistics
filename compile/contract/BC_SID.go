// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BCSIDG1Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG1Point struct {
	X *big.Int
	Y *big.Int
}

// BCSIDG2Point is an auto generated low-level Go binding around an user-defined struct.
type BCSIDG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerPubKeyY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"BroadcastPubKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"SellerAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"SellerGetPayment\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"AddMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"CheckClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_SN\",\"type\":\"tuple\"}],\"name\":\"CreateLogisticsOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"g3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"y3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"a3\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetBuyerOrderID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetConfirmResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetCurrentSite\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetMapping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"GetPointKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"GetProduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetProofResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"GetSN\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"SID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_siteID\",\"type\":\"string\"}],\"name\":\"UpdateStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_g1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_g2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pkx\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pky\",\"type\":\"tuple\"}],\"name\":\"UploadACsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_code\",\"type\":\"string\"}],\"name\":\"VerifyCode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_pk2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_u\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"_s\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_attr\",\"type\":\"string\"}],\"name\":\"VerifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"buyerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationCode\",\"type\":\"string\"}],\"name\":\"buyerConfirmWithCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"_buyerPK\",\"type\":\"tuple\"}],\"name\":\"buyerCreateOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"getOrder\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"getSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBC_SID.G2Point\",\"name\":\"point2\",\"type\":\"tuple\"}],\"name\":\"isG2Zero\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"orderID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBuyerConfirm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orderLogistics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"buyerPubKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isOngoing\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"currentSite\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBC_SID.G1Point\",\"name\":\"SN\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"productPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"sellerAcceptOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"sellerCancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"attribute\",\"type\":\"string\"}],\"name\":\"stringToUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyerAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orderID\",\"type\":\"string\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60808060405234601f5760ff19600b5416600b55612d9d90816100258239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630a6307e514611927578063122030f31461191057806312451ac91461164f5780631614e38e1461188c57806316d2e3331461177b5780631872c257146116895780631aa4a01d1461164f5780631db9a94b1461151457806324f47457146112c357806328a431af146114fd578063303f75801461146b578063432964e9146113b75780634d0b1eee146112c85780635683e5ea146112c35780636163fde714611280578063633df11f146111d857806369da6b161461111157806376646bfb146110ee5780637760cd2f146110c257806399927c351461102e5780639b4b8d2a14610fb55780639b96eece14610f7b5780639c0f744714610f1b578063a3ebb00014610ef7578063ac5d372314610eb5578063b28964c614610de2578063d8483c7514610d90578063dc4b6e7b14610cea578063e1a7d4321461052b578063e931de8014610512578063ed758406146104ef5763fedbe99d1461017c57600080fd5b60c03660031901126104ea57610190611a39565b602435906001600160a01b03821682036104ea576044356001600160401b0381116104ea576101c3903690600401611ac2565b6101cc36611c90565b926040519260ff6002845195602081818801986101ea81838c611ba8565b810160118152030190200154166104a55760018060a01b0316600052600e60205260406000209060018060a01b031660005260205261022d604060002082611bcb565b9160405161023a81611a4f565b61024384611e32565b8152600184015460208201526002840154604082015261026560038501611e32565b60608201526004840154608082015261010060ff600761028760058801611dda565b968760a08601520154818116151560c0850152818160081c16151560e085015260101c1615159101526040519260a084018481106001600160401b0382111761048f576040528352602083016001815261035460209161033c61031f84604051966102f28289611a86565b6000885260408a0197885260608a01986064358a5260808b019b8c52604051938492839251928391611ba8565b601190820190815203019020965180518855602001516001880155565b511515600286019060ff801983541691151516179055565b600384019151908151916001600160401b03831161048f576103768454611df8565b601f8111610454575b5081601f84116001146103e3575082600595936103d69895936103b9936000926103d8575b50508160011b916000199060031b1c19161790565b90555b516004840155519101906020600191805184550151910155565b005b0151905038806103a4565b9190601f1984168560005283600020936000905b82821061043c575050926001928592600598966103d69b989610610423575b505050811b0190556103bc565b015160001960f88460031b161c19169055388080610416565b806001869782949787015181550196019401906103f7565b61047f908560005283600020601f860160051c810191858710610485575b601f0160051c0190612002565b3861037f565b9091508190610472565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f4c6f67697374696373206f7264657220616c72656164792065786973747300006044820152606490fd5b600080fd5b346104ea57602061050861050236611d5b565b90612838565b6040519015158152f35b346104ea57602061050861052536611d0b565b9061275a565b60a03660031901126104ea5761053f611a39565b6024356001600160401b0381116104ea5761055e903690600401611ac2565b604435919060403660631901126104ea576040519261057c84611a6b565b6064358452602084019260843584528115610ca55760018060a01b03169283600052600d6020526105b1604060002084611bcb565b54908115610c6c578282029182048303610c1c57813403610c32576000194301438111610c1c5760405160208101914283523360601b806040840152605483015240606882015260688152610607608882611a86565b5190209560409182519161061b8484611a86565b601083526f181899199a1a9b1b9c1cb0b131b232b360811b6020840152606092845199610648858c611a86565b858b52601f1985013660208d013760005b60208110610b845750505087600052600e6020528360002060018060a01b03331660005260205260ff6007610691866000208c611bcb565b015416610b495788888580516106a681611a4f565b8a8152602081018a81528282018a8152888301868152608084019134835260a085019389855261070f60c087019960008b5260e088019860018a5261010089019a60008c52600052600e6020528060002060018060a01b03331660005260205260002090611bcb565b95518051906001600160401b03821161048f5761072c8854611df8565b601f8111610b17575b50602090601f8311600114610ab0576107669291600091836103d85750508160011b916000199060031b1c19161790565b86555b51600186015551600285015551805160038501916001600160401b03821161048f576107958354611df8565b601f8111610a7e575b50602090601f8311600114610a0b57926107dc836007979461080f9997946107f8976000926103d85750508160011b916000199060031b1c19161790565b90555b5160048401555180516005840155602001516006830155565b0193511515849060ff801983541691151516179055565b518254915162ffff001990921690151560081b61ff00161790151560101b62ff00001617905588516001600160401b03811161048f57610850601054611df8565b601f81116109a9575b5060208a601f831160011461090457926108b9836108d49a97947f85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d768359c9a97946108f49a976000926108f95750508160011b916000199060031b1c19161790565b6010555b51905192805198899860c08a5260c08a0190611c43565b956020890152870152850152608084015282810360a08401523396611c43565b0390a3005b015190508f8f6103a4565b50601f1982169060106000528b600080516020612d488339815191529260005b81811061098f5750937f85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d768359b9996936108f4999693600193836108d49e9b9810610976575b505050811b016010556108bd565b015160001960f88460031b161c191690558e808f610968565b9183015184556001909301926020928301928e9201610924565b6109ef906010600052601f830160051c600080516020612d488339815191520190602084106109f5575b601f0160051c600080516020612d488339815191520190612002565b8a610859565b600080516020612d4883398151915291506109d3565b90601f1983169184600052816000209260005b818110610a6657509361080f9896936107f896936001938360079b9810610a4d575b505050811b0190556107df565b015160001960f88460031b161c19169055388080610a40565b92936020600181928786015181550195019301610a1e565b610aaa90846000526020600020601f850160051c8101916020861061048557601f0160051c0190612002565b3861079e565b90601f1983169189600052816000209260005b818110610aff5750908460019594939210610ae6575b505050811b018655610769565b015160001960f88460031b161c19169055388080610ad9565b92936020600181928786015181550195019301610ac3565b610b4390896000526020600020601f850160051c8101916020861061048557601f0160051c0190612002565b38610735565b835162461bcd60e51b81526020600482015260146024820152734f7264657220616c72656164792065786973747360601b6044820152606490fd5b81811a6001600160f81b0319610ba1600483901c600f1686612d36565b5116908260011b9183830460021484151715610c1c57610bc78f91849060001a92612d36565b536001600160f81b031990610bdf90600f1686612d36565b51166000916001019182600111610c0857600193928f92610c01921a92612d36565b5301610659565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08115512081cd95b9d60721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270141c9bd91d58dd081b9bdd08199bdd5b99607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f5175616e74697479206d75737420626520706f736974697665000000000000006044820152606490fd5b346104ea5760403660031901126104ea576004356001600160401b0381116104ea57610d1a903690600401611ac2565b602435908115610d3f57610d3c9033600052600d602052604060002090611bcb565b55005b60405162461bcd60e51b8152602060048201526024808201527f556e6974207072696365206d7573742062652067726561746572207468616e206044820152637a65726f60e01b6064820152608490fd5b346104ea57602060ff6007610dd2610da736611bf1565b6001600160a01b039283166000908152600e8852604080822093909416815291875291902090611bcb565b015460101c166040519015158152f35b346104ea5760003660031901126104ea576040516000601054610e0481611df8565b8084529060018116908115610e915750600114610e44575b610e4083610e2c81850382611a86565b604051918291602083526020830190611c43565b0390f35b60106000908152600080516020612d48833981519152939250905b808210610e7757509091508101602001610e2c610e1c565b919260018160209254838588010152019101909291610e5f565b60ff191660208086019190915291151560051b84019091019150610e2c9050610e1c565b346104ea5760203660031901126104ea576004356001600160401b0381116104ea57610eef610eea6020923690600401611ac2565b6126f5565b604051908152f35b346104ea5760403660031901126104ea576020610eef610f1636611c68565b6126c9565b346104ea5760203660031901126104ea576004356001600160401b0381116104ea57610e2c6003610f6b6020610f58610e40953690600401611ac2565b8160405193828580945193849201611ba8565b8101601181520301902001611e32565b346104ea5760203660031901126104ea576001600160a01b03610f9c611a39565b16600052600f6020526020604060002054604051908152f35b346104ea5760203660031901126104ea576004356001600160401b0381116104ea5761101c600561100c6020610ff16040953690600401611ac2565b610ff96126b0565b5081865193828580945193849201611ba8565b8101601181520301902001611dda565b60208251918051835201516020820152f35b346104ea576103d660008080806110ac6110b161104a36611b09565b6001600160a01b03909116808552600e6020908152604080872033885290915285209093919060049061107d9083611bcb565b61108d60ff600783015416611f84565b0154938552600e60209081526040808720338852909152852090611bcb565b612068565b335af16110bc611f54565b50612282565b346104ea5760203660031901126104ea576004356000526000602052610e40610e2c6040600020611e32565b346104ea5760003660031901126104ea57602060ff600b54166040519015158152f35b346104ea576102003660031901126104ea5761112c36611c68565b61113536611f1b565b9060803660c31901126104ea576040519161114f83611a6b565b61115a3660c4611ed6565b835261116836610104611ed6565b60208401526080366101431901126104ea576040519161118783611a6b565b61119336610144611ed6565b83526111a136610184611ed6565b60208401526101e435926001600160401b0384116104ea576020946111cd610508953690600401611ac2565b936101c4359361243a565b346104ea576101403660031901126104ea576111f336611c68565b6111fc36611f1b565b9061120636611cb8565b91602061121236611ce0565b9280516001550151600255805160005b6002811061126b5750506020015160005b600281106112565783516007556020848101516008558351600955830151600a55005b60019060208351930192816005015501611233565b60019060208351930192816003015501611222565b346104ea5760803660031901126104ea5760206105086040516112a281611a6b565b6112ad366004611ed6565b81526112ba366044611ed6565b838201526123a7565b611da5565b346104ea5761136461130c6112dc36611bf1565b9160018060a01b0316600052600e60205260406000209060018060a01b0316600052602052604060002090611bcb565b61131581611e32565b9060ff600182015491602060028201549161137b61133560038301611e32565b95600483015496600761134a60058601611dda565b940154956040519a8b9a6101408c526101408c0190611c43565b92868b015260408a015288820360608a0152611c43565b946080870152805160a0870152015160c0850152818116151560e0850152818160081c16151561010085015260101c1615156101208301520390f35b346104ea5760203660031901126104ea576004356001600160401b0381116104ea576113ed6020610f5881933690600401611ac2565b8101601181520301902061140081611dda565b908260ff60028301541661145361141960038501611e32565b61142a600560048701549601611dda565b92604051978789985189520151858801521515604087015260e0606087015260e0860190611c43565b926080850152805160a0850152015160c08301520390f35b346104ea576103d6600080808061148136611b09565b90338352600e6020526040832060018060a01b03821684526020526114ea6110ac60046114b16040872086611bcb565b6114c160ff600783015416611f84565b0154338652600e602090815260408088206001600160a01b038716895290915286209094611bcb565b6001600160a01b03165af16110bc611f54565b346104ea576103d661150e36611b4b565b916122be565b346104ea576020600361153e61152936611d5b565b93908160405193828580945193849201611ba8565b8101601181520301902061155860ff600283015416611f84565b0181516001600160401b03811161048f576115738254611df8565b601f811161161d575b50602092601f82116001146115bd576115ae929382916000926115b25750508160011b916000199060031b1c19161790565b9055005b0151905084806103a4565b601f1982169383600052806000209160005b86811061160557508360019596106115ec575b505050811b019055005b015160001960f88460031b161c191690558380806115e2565b919260206001819286850151815501940192016115cf565b61164990836000526020600020601f840160051c8101916020851061048557601f0160051c0190612002565b8361157c565b346104ea57602061168061166236611b09565b6001600160a01b039091166000908152600d84526040902090611bcb565b54604051908152f35b346104ea576116a161169a36611d0b565b91906126c9565b6000526000602052604060002081516001600160401b03811161048f576116c88254611df8565b601f8111611749575b50602092601f8211600114611703576115ae929382916000926115b25750508160011b916000199060031b1c19161790565b601f1982169383600052806000209160005b86811061173157508360019596106115ec57505050811b019055005b91926020600181928685015181550194019201611715565b61177590836000526020600020601f840160051c8101916020851061048557601f0160051c0190612002565b836116d1565b6102803660031901126104ea5761179136611c68565b60403660431901126104ea57604051906117aa82611a6b565b604435825260643560208301526117c036611c90565b916117ca36611cb8565b916117d436611ce0565b936040366101431901126104ea576040516117ee81611a6b565b6101443581526101643560208201526040366101831901126104ea5760405161181681611a6b565b6101843581526101a43560208201526040366101c31901126104ea576040519161183f83611a6b565b6101c43583526101e43560208401526040366102031901126104ea57602097610508976040519561186f87611a6b565b610204358752610224358b8801526102643598610244359861218e565b346104ea576118de6118a06112dc36611bf1565b600181015460ff60028301546007840154906118ec6118ca60036118c388611e32565b9701611e32565b60405197889760c0895260c0890190611c43565b908782036020890152611c43565b93604086015260608501528181161515608085015260081c16151560a08301520390f35b346104ea576103d661192136611b4b565b916120a4565b346104ea5761193536611b09565b9033600052600f6020526040600020549081156119fd5733600052600f60205260006040812055600080808085335af161196d611f54565b50156119c5577fd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450906119aa60405194604086526040860190611c43565b60208501939093526001600160a01b031692339281900390a3005b60405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b600435906001600160a01b03821682036104ea57565b61012081019081106001600160401b0382111761048f57604052565b604081019081106001600160401b0382111761048f57604052565b90601f801991011681019081106001600160401b0382111761048f57604052565b6001600160401b03811161048f57601f01601f191660200190565b81601f820112156104ea57803590611ad982611aa7565b92611ae76040519485611a86565b828452602083830101116104ea57816000926020809301838601378301015290565b9060406003198301126104ea576004356001600160a01b03811681036104ea5791602435906001600160401b0382116104ea57611b4891600401611ac2565b90565b60606003198201126104ea576004356001600160a01b03811681036104ea57916024356001600160401b0381116104ea5782611b8991600401611ac2565b91604435906001600160401b0382116104ea57611b4891600401611ac2565b60005b838110611bbb5750506000910152565b8181015183820152602001611bab565b602090611be5928260405194838680955193849201611ba8565b82019081520301902090565b60606003198201126104ea576004356001600160a01b03811681036104ea57916024356001600160a01b03811681036104ea5791604435906001600160401b0382116104ea57611b4891600401611ac2565b90602091611c5c81518092818552858086019101611ba8565b601f01601f1916010190565b60409060031901126104ea5760405190611c8182611a6b565b60043582526024356020830152565b60409060831901126104ea5760405190611ca982611a6b565b608435825260a4356020830152565b60409060c31901126104ea5760405190611cd182611a6b565b60c435825260e4356020830152565b6040906101031901126104ea5760405190611cfa82611a6b565b610104358252610124356020830152565b9060606003198301126104ea57604060048303126104ea57604051611d2f81611a6b565b6004358152602435602082015291604435906001600160401b0382116104ea57611b4891600401611ac2565b9060406003198301126104ea576004356001600160401b0381116104ea5782611d8691600401611ac2565b91602435906001600160401b0382116104ea57611b4891600401611ac2565b346104ea5760403660031901126104ea57611dc2610f1636611c68565b6000526000602052610e40610e2c6040600020611e32565b90604051611de781611a6b565b602060018294805484520154910152565b90600182811c92168015611e28575b6020831014611e1257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e07565b9060405191826000825492611e4684611df8565b8084529360018116908115611eb45750600114611e6d575b50611e6b92500383611a86565b565b90506000929192526020600020906000915b818310611e98575050906020611e6b9282010138611e5e565b6020919350806001915483858901015201910190918492611e7f565b905060209250611e6b94915060ff191682840152151560051b82010138611e5e565b9080601f830112156104ea576040805192611ef18285611a86565b839181019283116104ea57905b828210611f0b5750505090565b8135815260209182019101611efe565b9060806043198301126104ea57604051611f3481611a6b565b6020611f4f8294611f46816044611ed6565b84526084611ed6565b910152565b3d15611f7f573d90611f6582611aa7565b91611f736040519384611a86565b82523d6000602084013e565b606090565b15611f8b57565b60405162461bcd60e51b815260206004820152601060248201526f4f72646572206e6f742061637469766560801b6044820152606490fd5b15611fca57565b60405162461bcd60e51b815260206004820152601060248201526f119d5b991cc81b9bdd081b1bd8dad95960821b6044820152606490fd5b81811061200d575050565b60008155600101612002565b6120238154611df8565b908161202d575050565b81601f6000931160011461203f575055565b8183526020832061205b91601f0160051c810190600101612002565b8082528160208120915555565b600760009161207681612019565b82600182015582600282015561208e60038201612019565b8260048201558260058201558260068201550155565b6001600160a01b03166000818152600e6020908152604080832033845290915290209092906120d39083611bcb565b906007820190612100848354926120ec60ff8516611f84565b6120fb60ff8560081c16611fc3565b612838565b61217c575050600201546000838152600e6020908152604080832033845290915290209091612132916110ac91611bcb565b81600052600f6020526040600020805490828201809211610c1c57556040519081527fcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e60203392a3565b62ff0000191662010000179055505050565b926121db8a6121d58d6121cf6121ed9a9b979f9e6121e1979a9f806121c3836121bd6121c9946121e79f6128b5565b9e6128b5565b986128b5565b9f6128b5565b966128b5565b996128b5565b94612909565b97612909565b93612909565b9385518151149586159661226e575b50508415612261575b841561224d575b50508215612240575b821561222c575b505061222757600190565b600090565b60209192508101519101511415388061221c565b8051825114159250612215565b60209081015191015114159250388061220c565b8051825114159450612205565b6020908101519101511415945038806121fc565b1561228957565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b9133600052600e602052604060002060018060a01b0384166000526020526122ea604060002083611bcb565b612313600782019261230260ff855460081c16611fc3565b61230e60058401611dda565b61275a565b1561236b5750600160ff198254161790557f40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a604051926020845260018060a01b0316928061236633946020830190611c43565b0390a3565b60008093819350611e6b956114ea6110ac60028596015493338652600e6020526040862060018060a01b03851687526020526040862090611bcb565b6040516123b381611a6b565b600081526020810191600083526040516123cc81611a6b565b600081526020810192600084528251519051149384612429575b5083612418575b5082612404575b50506123ff57600090565b600190565b6020919250810151015190511438806123f4565b6020820151519051149250386123ed565b8251602001519051149350386123e6565b9390959495612448836123a7565b801561269e575b6126935761247460405161246281611a6b565b60015481526002546020820152612969565b90856040519161248383611a6b565b60405160036000825b60028210612679575050506124a2604082611a86565b8352604051600594906000815b6002821061265f5750506124d395506124c9604082611a86565b6020850152612a9c565b15612655579061252061250261253094936040516124f081611a6b565b6009548152600a5460208201526128b5565b60405161250e81611a6b565b60075481526008546020820152612909565b9061252a85612969565b91612a9c565b61253c575b5060019150565b61255290600160ff19600b541617600b556126c9565b6000526000602052604060002082516001600160401b03811161048f576125798254611df8565b601f8111612623575b506020601f82116001146125be5781906125b49394956000926103d85750508160011b916000199060031b1c19161790565b90555b8038612535565b601f1982169083600052806000209160005b81811061260b575095836001959697106125f2575b505050811b0190556125b7565b015160001960f88460031b161c191690553880806125e5565b9192602060018192868b0151815501940192016125d0565b61264f90836000526020600020601f840160051c8101916020851061048557601f0160051c0190612002565b38612582565b5060009450505050565b875481526001978801978c965091909101906020016124af565b825481528b9550600192830192919091019060200161248c565b506000955050505050565b506126a8876126f5565b82141561244f565b604051906126bd82611a6b565b60006020838281520152565b6020815191015160405190602082019283526040820152604081526126ef606082611a86565b51902090565b600061273b60209260405161272a8582816127198183019687815193849201611ba8565b81010301601f198101835282611a86565b604051928392839251928391611ba8565b8101039060025afa1561274e5760005190565b6040513d6000823e3d90fd5b612763906126c9565b60005260006020526040600020604051602081019181600082549261278784611df8565b936001811690811561281a57506001146127d8575b506127b0925003601f198101835282611a86565b519020906040516127d1602082816127198183019687815193849201611ba8565b5190201490565b9150506000528160206000206000905b83821061280057505060206127b0928201013861279c565b6020919250806001915483858801015201910183916127e8565b60ff19168752506127b093801515028301602001915038905061279c565b906128a560206004926128936040519161285a81518092868087019101611ba8565b820191611f1f60f21b84840152610eea600282868a51818c019761288282602283018b611ba8565b01010301601f198101835282611a86565b94604051938492839251928391611ba8565b8101601181520301902001541490565b91906040516128c381611a6b565b6000815260006020820152608081946060936020604051926128e58785611a86565b863685378051845201516020830152604082015260076107cf195a01fa156104ea57565b60609092919260c06040519161291e83611a6b565b600083526000602084015260208396816080936040519461293f8187611a86565b368637805185520151828401528051604084015201518482015260066107cf195a01fa156104ea57565b60405161297581611a6b565b60008152600060208201525080511580612a32575b612a17577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208251920151067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478111610c1c5760405191612a0d83611a6b565b8252602082015290565b50604051612a2481611a6b565b600081526000602082015290565b5060208101511561298a565b6001600160401b03811161048f5760051b60200190565b805115612a625760200190565b634e487b7160e01b600052603260045260246000fd5b805160011015612a625760400190565b8051821015612a625760209160051b010190565b91929060609360405193612ab08686611a86565b60028552601f19860160005b818110612d115750612ad16040519788611a86565b6002875260005b818110612cce575050612aea85612a55565b52612af484612a55565b50612afe84612a78565b52612b0883612a78565b50612b1284612a55565b52612b1c83612a55565b50612b2683612a78565b52612b3082612a78565b50805190825182036104ea57600682029180830460061481151715610c1c57612b5883612a3e565b612b656040519182611a86565b838152612b7184612a3e565b602082019590601f190136873760005b838110612bbc575050505050602090604051928391612ba08484611a86565b8336843760051b9060086107cf195a01fa156104ea5751151590565b612bc68186612a88565b5151600682029082820460061483151715610c1c57612be58286612a88565b526020612bf28388612a88565b51015160009060018301808411612cba57612c0d9087612a88565b52612c188385612a88565b515151905060028201808311610c1c57612c329086612a88565b526020612c3f8385612a88565b5151015160009060038301808411612cba57612c5b9087612a88565b526020612c688486612a88565b51015151905060048201808311610c1c57612c839086612a88565b52602080612c918486612a88565b510151015190600060058201809211610c08575090612cb36001939286612a88565b5201612b81565b634e487b7160e01b83526011600452602483fd5b602090604051612cdd81611a6b565b60408051612ceb8282611a86565b813682378252805190612cfe8183611a86565b3682378382015282828b01015201612ad8565b602090604051612d2081611a6b565b6000815260008382015282828a01015201612abc565b908151811015612a6257016020019056fe1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672a26469706673582212208c4eced907695cde898926e402c48de074a97dd99418da3f5338549fbdeefbec64736f6c634300081c0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCaller) CheckClaim(opts *bind.CallOpts, pk BCSIDG1Point, attribute string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "CheckClaim", pk, attribute)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// CheckClaim is a free data retrieval call binding the contract method 0xe931de80.
//
// Solidity: function CheckClaim((uint256,uint256) pk, string attribute) view returns(bool)
func (_Contract *ContractCallerSession) CheckClaim(pk BCSIDG1Point, attribute string) (bool, error) {
	return _Contract.Contract.CheckClaim(&_Contract.CallOpts, pk, attribute)
}

// GetBuyerOrderID is a free data retrieval call binding the contract method 0xb28964c6.
//
// Solidity: function GetBuyerOrderID() view returns(string)
func (_Contract *ContractCaller) GetBuyerOrderID(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetBuyerOrderID")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetBuyerOrderID is a free data retrieval call binding the contract method 0xb28964c6.
//
// Solidity: function GetBuyerOrderID() view returns(string)
func (_Contract *ContractSession) GetBuyerOrderID() (string, error) {
	return _Contract.Contract.GetBuyerOrderID(&_Contract.CallOpts)
}

// GetBuyerOrderID is a free data retrieval call binding the contract method 0xb28964c6.
//
// Solidity: function GetBuyerOrderID() view returns(string)
func (_Contract *ContractCallerSession) GetBuyerOrderID() (string, error) {
	return _Contract.Contract.GetBuyerOrderID(&_Contract.CallOpts)
}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractCaller) GetConfirmResult(opts *bind.CallOpts, _sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetConfirmResult", _sellerAddr, _buyerAddr, _orderID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractSession) GetConfirmResult(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	return _Contract.Contract.GetConfirmResult(&_Contract.CallOpts, _sellerAddr, _buyerAddr, _orderID)
}

// GetConfirmResult is a free data retrieval call binding the contract method 0xd8483c75.
//
// Solidity: function GetConfirmResult(address _sellerAddr, address _buyerAddr, string _orderID) view returns(bool)
func (_Contract *ContractCallerSession) GetConfirmResult(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string) (bool, error) {
	return _Contract.Contract.GetConfirmResult(&_Contract.CallOpts, _sellerAddr, _buyerAddr, _orderID)
}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractCaller) GetCurrentSite(opts *bind.CallOpts, _orderID string) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetCurrentSite", _orderID)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractSession) GetCurrentSite(_orderID string) (string, error) {
	return _Contract.Contract.GetCurrentSite(&_Contract.CallOpts, _orderID)
}

// GetCurrentSite is a free data retrieval call binding the contract method 0x9c0f7447.
//
// Solidity: function GetCurrentSite(string _orderID) view returns(string)
func (_Contract *ContractCallerSession) GetCurrentSite(_orderID string) (string, error) {
	return _Contract.Contract.GetCurrentSite(&_Contract.CallOpts, _orderID)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetMapping(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetMapping", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetMapping is a free data retrieval call binding the contract method 0x24f47457.
//
// Solidity: function GetMapping((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetMapping(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetMapping(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCaller) GetPointKey(opts *bind.CallOpts, pk BCSIDG1Point) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetPointKey", pk)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetPointKey is a free data retrieval call binding the contract method 0xa3ebb000.
//
// Solidity: function GetPointKey((uint256,uint256) pk) pure returns(bytes32)
func (_Contract *ContractCallerSession) GetPointKey(pk BCSIDG1Point) ([32]byte, error) {
	return _Contract.Contract.GetPointKey(&_Contract.CallOpts, pk)
}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractCaller) GetProduct(opts *bind.CallOpts, _addr common.Address, _productID string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetProduct", _addr, _productID)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractSession) GetProduct(_addr common.Address, _productID string) (*big.Int, error) {
	return _Contract.Contract.GetProduct(&_Contract.CallOpts, _addr, _productID)
}

// GetProduct is a free data retrieval call binding the contract method 0x1aa4a01d.
//
// Solidity: function GetProduct(address _addr, string _productID) view returns(uint256)
func (_Contract *ContractCallerSession) GetProduct(_addr common.Address, _productID string) (*big.Int, error) {
	return _Contract.Contract.GetProduct(&_Contract.CallOpts, _addr, _productID)
}

// GetProofResult is a free data retrieval call binding the contract method 0x76646bfb.
//
// Solidity: function GetProofResult() view returns(bool)
func (_Contract *ContractCaller) GetProofResult(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetProofResult")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetProofResult is a free data retrieval call binding the contract method 0x76646bfb.
//
// Solidity: function GetProofResult() view returns(bool)
func (_Contract *ContractSession) GetProofResult() (bool, error) {
	return _Contract.Contract.GetProofResult(&_Contract.CallOpts)
}

// GetProofResult is a free data retrieval call binding the contract method 0x76646bfb.
//
// Solidity: function GetProofResult() view returns(bool)
func (_Contract *ContractCallerSession) GetProofResult() (bool, error) {
	return _Contract.Contract.GetProofResult(&_Contract.CallOpts)
}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractCaller) GetSN(opts *bind.CallOpts, _orderID string) (BCSIDG1Point, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetSN", _orderID)

	if err != nil {
		return *new(BCSIDG1Point), err
	}

	out0 := *abi.ConvertType(out[0], new(BCSIDG1Point)).(*BCSIDG1Point)

	return out0, err

}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractSession) GetSN(_orderID string) (BCSIDG1Point, error) {
	return _Contract.Contract.GetSN(&_Contract.CallOpts, _orderID)
}

// GetSN is a free data retrieval call binding the contract method 0x9b4b8d2a.
//
// Solidity: function GetSN(string _orderID) view returns((uint256,uint256))
func (_Contract *ContractCallerSession) GetSN(_orderID string) (BCSIDG1Point, error) {
	return _Contract.Contract.GetSN(&_Contract.CallOpts, _orderID)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCaller) SID(opts *bind.CallOpts, arg0 [32]byte) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "SID", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// SID is a free data retrieval call binding the contract method 0x7760cd2f.
//
// Solidity: function SID(bytes32 ) view returns(string)
func (_Contract *ContractCallerSession) SID(arg0 [32]byte) (string, error) {
	return _Contract.Contract.SID(&_Contract.CallOpts, arg0)
}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractCaller) VerifyCode(opts *bind.CallOpts, _orderID string, _code string) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "VerifyCode", _orderID, _code)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractSession) VerifyCode(_orderID string, _code string) (bool, error) {
	return _Contract.Contract.VerifyCode(&_Contract.CallOpts, _orderID, _code)
}

// VerifyCode is a free data retrieval call binding the contract method 0xed758406.
//
// Solidity: function VerifyCode(string _orderID, string _code) view returns(bool)
func (_Contract *ContractCallerSession) VerifyCode(_orderID string, _code string) (bool, error) {
	return _Contract.Contract.VerifyCode(&_Contract.CallOpts, _orderID, _code)
}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractCaller) GetBalanceOf(opts *bind.CallOpts, seller common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getBalanceOf", seller)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractSession) GetBalanceOf(seller common.Address) (*big.Int, error) {
	return _Contract.Contract.GetBalanceOf(&_Contract.CallOpts, seller)
}

// GetBalanceOf is a free data retrieval call binding the contract method 0x9b96eece.
//
// Solidity: function getBalanceOf(address seller) view returns(uint256)
func (_Contract *ContractCallerSession) GetBalanceOf(seller common.Address) (*big.Int, error) {
	return _Contract.Contract.GetBalanceOf(&_Contract.CallOpts, seller)
}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked)
func (_Contract *ContractCaller) GetOrder(opts *bind.CallOpts, _seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID string
	OrderID   string
	Quantity  *big.Int
	Price     *big.Int
	IsOngoing bool
	IsLocked  bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getOrder", _seller, _buyer, _orderID)

	outstruct := new(struct {
		ProductID string
		OrderID   string
		Quantity  *big.Int
		Price     *big.Int
		IsOngoing bool
		IsLocked  bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.OrderID = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.IsOngoing = *abi.ConvertType(out[4], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[5], new(bool)).(*bool)

	return *outstruct, err

}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked)
func (_Contract *ContractSession) GetOrder(_seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID string
	OrderID   string
	Quantity  *big.Int
	Price     *big.Int
	IsOngoing bool
	IsLocked  bool
}, error) {
	return _Contract.Contract.GetOrder(&_Contract.CallOpts, _seller, _buyer, _orderID)
}

// GetOrder is a free data retrieval call binding the contract method 0x1614e38e.
//
// Solidity: function getOrder(address _seller, address _buyer, string _orderID) view returns(string productID, string orderID, uint256 quantity, uint256 price, bool isOngoing, bool isLocked)
func (_Contract *ContractCallerSession) GetOrder(_seller common.Address, _buyer common.Address, _orderID string) (struct {
	ProductID string
	OrderID   string
	Quantity  *big.Int
	Price     *big.Int
	IsOngoing bool
	IsLocked  bool
}, error) {
	return _Contract.Contract.GetOrder(&_Contract.CallOpts, _seller, _buyer, _orderID)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCaller) GetSID(opts *bind.CallOpts, pk BCSIDG1Point) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getSID", pk)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// GetSID is a free data retrieval call binding the contract method 0x5683e5ea.
//
// Solidity: function getSID((uint256,uint256) pk) view returns(string)
func (_Contract *ContractCallerSession) GetSID(pk BCSIDG1Point) (string, error) {
	return _Contract.Contract.GetSID(&_Contract.CallOpts, pk)
}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractCaller) IsG2Zero(opts *bind.CallOpts, point2 BCSIDG2Point) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "isG2Zero", point2)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractSession) IsG2Zero(point2 BCSIDG2Point) (bool, error) {
	return _Contract.Contract.IsG2Zero(&_Contract.CallOpts, point2)
}

// IsG2Zero is a free data retrieval call binding the contract method 0x6163fde7.
//
// Solidity: function isG2Zero((uint256[2],uint256[2]) point2) view returns(bool)
func (_Contract *ContractCallerSession) IsG2Zero(point2 BCSIDG2Point) (bool, error) {
	return _Contract.Contract.IsG2Zero(&_Contract.CallOpts, point2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCaller) OrderBook(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderBook", arg0, arg1, arg2)

	outstruct := new(struct {
		ProductID      string
		Quantity       *big.Int
		Price          *big.Int
		OrderID        string
		LockedAmount   *big.Int
		BuyerPubKey    BCSIDG1Point
		IsOngoing      bool
		IsLocked       bool
		IsBuyerConfirm bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProductID = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Quantity = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Price = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.OrderID = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.LockedAmount = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.BuyerPubKey = *abi.ConvertType(out[5], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[6], new(bool)).(*bool)
	outstruct.IsLocked = *abi.ConvertType(out[7], new(bool)).(*bool)
	outstruct.IsBuyerConfirm = *abi.ConvertType(out[8], new(bool)).(*bool)

	return *outstruct, err

}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderBook is a free data retrieval call binding the contract method 0x4d0b1eee.
//
// Solidity: function orderBook(address , address , string ) view returns(string productID, uint256 quantity, uint256 price, string orderID, uint256 lockedAmount, (uint256,uint256) buyerPubKey, bool isOngoing, bool isLocked, bool isBuyerConfirm)
func (_Contract *ContractCallerSession) OrderBook(arg0 common.Address, arg1 common.Address, arg2 string) (struct {
	ProductID      string
	Quantity       *big.Int
	Price          *big.Int
	OrderID        string
	LockedAmount   *big.Int
	BuyerPubKey    BCSIDG1Point
	IsOngoing      bool
	IsLocked       bool
	IsBuyerConfirm bool
}, error) {
	return _Contract.Contract.OrderBook(&_Contract.CallOpts, arg0, arg1, arg2)
}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractCaller) OrderLogistics(opts *bind.CallOpts, arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "orderLogistics", arg0)

	outstruct := new(struct {
		BuyerPubKey BCSIDG1Point
		IsOngoing   bool
		CurrentSite string
		Code        *big.Int
		SN          BCSIDG1Point
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.BuyerPubKey = *abi.ConvertType(out[0], new(BCSIDG1Point)).(*BCSIDG1Point)
	outstruct.IsOngoing = *abi.ConvertType(out[1], new(bool)).(*bool)
	outstruct.CurrentSite = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Code = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.SN = *abi.ConvertType(out[4], new(BCSIDG1Point)).(*BCSIDG1Point)

	return *outstruct, err

}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractSession) OrderLogistics(arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	return _Contract.Contract.OrderLogistics(&_Contract.CallOpts, arg0)
}

// OrderLogistics is a free data retrieval call binding the contract method 0x432964e9.
//
// Solidity: function orderLogistics(string ) view returns((uint256,uint256) buyerPubKey, bool isOngoing, string currentSite, uint256 code, (uint256,uint256) SN)
func (_Contract *ContractCallerSession) OrderLogistics(arg0 string) (struct {
	BuyerPubKey BCSIDG1Point
	IsOngoing   bool
	CurrentSite string
	Code        *big.Int
	SN          BCSIDG1Point
}, error) {
	return _Contract.Contract.OrderLogistics(&_Contract.CallOpts, arg0)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCaller) ProductPrices(opts *bind.CallOpts, arg0 common.Address, arg1 string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "productPrices", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// ProductPrices is a free data retrieval call binding the contract method 0x12451ac9.
//
// Solidity: function productPrices(address , string ) view returns(uint256)
func (_Contract *ContractCallerSession) ProductPrices(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.ProductPrices(&_Contract.CallOpts, arg0, arg1)
}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractCaller) StringToUint256(opts *bind.CallOpts, attribute string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "stringToUint256", attribute)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractSession) StringToUint256(attribute string) (*big.Int, error) {
	return _Contract.Contract.StringToUint256(&_Contract.CallOpts, attribute)
}

// StringToUint256 is a free data retrieval call binding the contract method 0xac5d3723.
//
// Solidity: function stringToUint256(string attribute) pure returns(uint256)
func (_Contract *ContractCallerSession) StringToUint256(attribute string) (*big.Int, error) {
	return _Contract.Contract.StringToUint256(&_Contract.CallOpts, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactor) AddMapping(opts *bind.TransactOpts, pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "AddMapping", pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// AddMapping is a paid mutator transaction binding the contract method 0x1872c257.
//
// Solidity: function AddMapping((uint256,uint256) pk, string attribute) returns()
func (_Contract *ContractTransactorSession) AddMapping(pk BCSIDG1Point, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.AddMapping(&_Contract.TransactOpts, pk, attribute)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractTransactor) CreateLogisticsOrder(opts *bind.TransactOpts, _sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "CreateLogisticsOrder", _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractSession) CreateLogisticsOrder(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.CreateLogisticsOrder(&_Contract.TransactOpts, _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// CreateLogisticsOrder is a paid mutator transaction binding the contract method 0xfedbe99d.
//
// Solidity: function CreateLogisticsOrder(address _sellerAddr, address _buyerAddr, string _orderID, uint256 _code, (uint256,uint256) _SN) payable returns()
func (_Contract *ContractTransactorSession) CreateLogisticsOrder(_sellerAddr common.Address, _buyerAddr common.Address, _orderID string, _code *big.Int, _SN BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.CreateLogisticsOrder(&_Contract.TransactOpts, _sellerAddr, _buyerAddr, _orderID, _code, _SN)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x16d2e333.
//
// Solidity: function DLEQVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) g2, (uint256,uint256) y2, (uint256,uint256) a2, (uint256,uint256) g3, (uint256,uint256) y3, (uint256,uint256) a3, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, g2 BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, g3 BCSIDG1Point, y3 BCSIDG1Point, a3 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g1, y1, a1, g2, y2, a2, g3, y3, a3, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x16d2e333.
//
// Solidity: function DLEQVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) g2, (uint256,uint256) y2, (uint256,uint256) a2, (uint256,uint256) g3, (uint256,uint256) y3, (uint256,uint256) a3, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, g2 BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, g3 BCSIDG1Point, y3 BCSIDG1Point, a3 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g1, y1, a1, g2, y2, a2, g3, y3, a3, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x16d2e333.
//
// Solidity: function DLEQVerify((uint256,uint256) g1, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) g2, (uint256,uint256) y2, (uint256,uint256) a2, (uint256,uint256) g3, (uint256,uint256) y3, (uint256,uint256) a3, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g1 BCSIDG1Point, y1 BCSIDG1Point, a1 BCSIDG1Point, g2 BCSIDG1Point, y2 BCSIDG1Point, a2 BCSIDG1Point, g3 BCSIDG1Point, y3 BCSIDG1Point, a3 BCSIDG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g1, y1, a1, g2, y2, a2, g3, y3, a3, c, z)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractTransactor) UpdateStatus(opts *bind.TransactOpts, _orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UpdateStatus", _orderID, _siteID)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractSession) UpdateStatus(_orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.Contract.UpdateStatus(&_Contract.TransactOpts, _orderID, _siteID)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x1db9a94b.
//
// Solidity: function UpdateStatus(string _orderID, string _siteID) returns()
func (_Contract *ContractTransactorSession) UpdateStatus(_orderID string, _siteID string) (*types.Transaction, error) {
	return _Contract.Contract.UpdateStatus(&_Contract.TransactOpts, _orderID, _siteID)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractTransactor) UploadACsParams(opts *bind.TransactOpts, _g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadACsParams", _g1, _g2, _pkx, _pky)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractSession) UploadACsParams(_g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadACsParams(&_Contract.TransactOpts, _g1, _g2, _pkx, _pky)
}

// UploadACsParams is a paid mutator transaction binding the contract method 0x633df11f.
//
// Solidity: function UploadACsParams((uint256,uint256) _g1, (uint256[2],uint256[2]) _g2, (uint256,uint256) _pkx, (uint256,uint256) _pky) returns()
func (_Contract *ContractTransactorSession) UploadACsParams(_g1 BCSIDG1Point, _g2 BCSIDG2Point, _pkx BCSIDG1Point, _pky BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadACsParams(&_Contract.TransactOpts, _g1, _g2, _pkx, _pky)
}

// VerifyProof is a paid mutator transaction binding the contract method 0x69da6b16.
//
// Solidity: function VerifyProof((uint256,uint256) _pk1, (uint256[2],uint256[2]) _pk2, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractTransactor) VerifyProof(opts *bind.TransactOpts, _pk1 BCSIDG1Point, _pk2 BCSIDG2Point, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VerifyProof", _pk1, _pk2, _u, _s, _m, _attr)
}

// VerifyProof is a paid mutator transaction binding the contract method 0x69da6b16.
//
// Solidity: function VerifyProof((uint256,uint256) _pk1, (uint256[2],uint256[2]) _pk2, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractSession) VerifyProof(_pk1 BCSIDG1Point, _pk2 BCSIDG2Point, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.Contract.VerifyProof(&_Contract.TransactOpts, _pk1, _pk2, _u, _s, _m, _attr)
}

// VerifyProof is a paid mutator transaction binding the contract method 0x69da6b16.
//
// Solidity: function VerifyProof((uint256,uint256) _pk1, (uint256[2],uint256[2]) _pk2, (uint256[2],uint256[2]) _u, (uint256[2],uint256[2]) _s, uint256 _m, string _attr) returns(bool)
func (_Contract *ContractTransactorSession) VerifyProof(_pk1 BCSIDG1Point, _pk2 BCSIDG2Point, _u BCSIDG2Point, _s BCSIDG2Point, _m *big.Int, _attr string) (*types.Transaction, error) {
	return _Contract.Contract.VerifyProof(&_Contract.TransactOpts, _pk1, _pk2, _u, _s, _m, _attr)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactor) BuyerCancelOrder(opts *bind.TransactOpts, _seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCancelOrder", _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerCancelOrder is a paid mutator transaction binding the contract method 0x99927c35.
//
// Solidity: function buyerCancelOrder(address _seller, string _orderID) returns()
func (_Contract *ContractTransactorSession) BuyerCancelOrder(_seller common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCancelOrder(&_Contract.TransactOpts, _seller, _orderID)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactor) BuyerConfirmWithCode(opts *bind.TransactOpts, _seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerConfirmWithCode", _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerConfirmWithCode is a paid mutator transaction binding the contract method 0x122030f3.
//
// Solidity: function buyerConfirmWithCode(address _seller, string _orderID, string verificationCode) returns()
func (_Contract *ContractTransactorSession) BuyerConfirmWithCode(_seller common.Address, _orderID string, verificationCode string) (*types.Transaction, error) {
	return _Contract.Contract.BuyerConfirmWithCode(&_Contract.TransactOpts, _seller, _orderID, verificationCode)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns()
func (_Contract *ContractTransactor) BuyerCreateOrder(opts *bind.TransactOpts, _seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buyerCreateOrder", _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns()
func (_Contract *ContractSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// BuyerCreateOrder is a paid mutator transaction binding the contract method 0xe1a7d432.
//
// Solidity: function buyerCreateOrder(address _seller, string _productID, uint256 _quantity, (uint256,uint256) _buyerPK) payable returns()
func (_Contract *ContractTransactorSession) BuyerCreateOrder(_seller common.Address, _productID string, _quantity *big.Int, _buyerPK BCSIDG1Point) (*types.Transaction, error) {
	return _Contract.Contract.BuyerCreateOrder(&_Contract.TransactOpts, _seller, _productID, _quantity, _buyerPK)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractTransactor) SellerAcceptOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerAcceptOrder", _buyer, _orderID, attribute)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute)
}

// SellerAcceptOrder is a paid mutator transaction binding the contract method 0x28a431af.
//
// Solidity: function sellerAcceptOrder(address _buyer, string _orderID, string attribute) returns()
func (_Contract *ContractTransactorSession) SellerAcceptOrder(_buyer common.Address, _orderID string, attribute string) (*types.Transaction, error) {
	return _Contract.Contract.SellerAcceptOrder(&_Contract.TransactOpts, _buyer, _orderID, attribute)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactor) SellerCancelOrder(opts *bind.TransactOpts, _buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sellerCancelOrder", _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SellerCancelOrder is a paid mutator transaction binding the contract method 0x303f7580.
//
// Solidity: function sellerCancelOrder(address _buyer, string _orderID) returns()
func (_Contract *ContractTransactorSession) SellerCancelOrder(_buyer common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.SellerCancelOrder(&_Contract.TransactOpts, _buyer, _orderID)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactor) SetProductPrice(opts *bind.TransactOpts, productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setProductPrice", productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// SetProductPrice is a paid mutator transaction binding the contract method 0xdc4b6e7b.
//
// Solidity: function setProductPrice(string productID, uint256 unitPrice) returns()
func (_Contract *ContractTransactorSession) SetProductPrice(productID string, unitPrice *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SetProductPrice(&_Contract.TransactOpts, productID, unitPrice)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) returns()
func (_Contract *ContractTransactor) WithdrawPayment(opts *bind.TransactOpts, _buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "withdrawPayment", _buyerAddr, _orderID)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) returns()
func (_Contract *ContractSession) WithdrawPayment(_buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts, _buyerAddr, _orderID)
}

// WithdrawPayment is a paid mutator transaction binding the contract method 0x0a6307e5.
//
// Solidity: function withdrawPayment(address _buyerAddr, string _orderID) returns()
func (_Contract *ContractTransactorSession) WithdrawPayment(_buyerAddr common.Address, _orderID string) (*types.Transaction, error) {
	return _Contract.Contract.WithdrawPayment(&_Contract.TransactOpts, _buyerAddr, _orderID)
}

// ContractBroadcastPubKeyIterator is returned from FilterBroadcastPubKey and is used to iterate over the raw logs and unpacked data for BroadcastPubKey events raised by the Contract contract.
type ContractBroadcastPubKeyIterator struct {
	Event *ContractBroadcastPubKey // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBroadcastPubKeyIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBroadcastPubKey)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBroadcastPubKey)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBroadcastPubKeyIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBroadcastPubKeyIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBroadcastPubKey represents a BroadcastPubKey event raised by the Contract contract.
type ContractBroadcastPubKey struct {
	Seller       common.Address
	Buyer        common.Address
	ProductID    string
	Quantity     *big.Int
	BuyerPubKeyX *big.Int
	BuyerPubKeyY *big.Int
	TotalPrice   *big.Int
	OrderID      string
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterBroadcastPubKey is a free log retrieval operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) FilterBroadcastPubKey(opts *bind.FilterOpts, _seller []common.Address, _buyer []common.Address) (*ContractBroadcastPubKeyIterator, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractBroadcastPubKeyIterator{contract: _Contract.contract, event: "BroadcastPubKey", logs: logs, sub: sub}, nil
}

// WatchBroadcastPubKey is a free log subscription operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) WatchBroadcastPubKey(opts *bind.WatchOpts, sink chan<- *ContractBroadcastPubKey, _seller []common.Address, _buyer []common.Address) (event.Subscription, error) {

	var _sellerRule []interface{}
	for _, _sellerItem := range _seller {
		_sellerRule = append(_sellerRule, _sellerItem)
	}
	var _buyerRule []interface{}
	for _, _buyerItem := range _buyer {
		_buyerRule = append(_buyerRule, _buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "BroadcastPubKey", _sellerRule, _buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBroadcastPubKey)
				if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBroadcastPubKey is a log parse operation binding the contract event 0x85c4696d0f8a7299d49d94ece954869348bf401539ecc7f039c96a37d4d76835.
//
// Solidity: event BroadcastPubKey(address indexed _seller, address indexed _buyer, string productID, uint256 quantity, uint256 buyerPubKeyX, uint256 buyerPubKeyY, uint256 totalPrice, string orderID)
func (_Contract *ContractFilterer) ParseBroadcastPubKey(log types.Log) (*ContractBroadcastPubKey, error) {
	event := new(ContractBroadcastPubKey)
	if err := _Contract.contract.UnpackLog(event, "BroadcastPubKey", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractOrderCompletedIterator is returned from FilterOrderCompleted and is used to iterate over the raw logs and unpacked data for OrderCompleted events raised by the Contract contract.
type ContractOrderCompletedIterator struct {
	Event *ContractOrderCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractOrderCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractOrderCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractOrderCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractOrderCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractOrderCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractOrderCompleted represents a OrderCompleted event raised by the Contract contract.
type ContractOrderCompleted struct {
	Buyer  common.Address
	Seller common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterOrderCompleted is a free log retrieval operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) FilterOrderCompleted(opts *bind.FilterOpts, buyer []common.Address, seller []common.Address) (*ContractOrderCompletedIterator, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return &ContractOrderCompletedIterator{contract: _Contract.contract, event: "OrderCompleted", logs: logs, sub: sub}, nil
}

// WatchOrderCompleted is a free log subscription operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) WatchOrderCompleted(opts *bind.WatchOpts, sink chan<- *ContractOrderCompleted, buyer []common.Address, seller []common.Address) (event.Subscription, error) {

	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}
	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "OrderCompleted", buyerRule, sellerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractOrderCompleted)
				if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderCompleted is a log parse operation binding the contract event 0xcbdae027b851b48705e1072c0c9ceedd7be4c50cf428125e072438065f258d6e.
//
// Solidity: event OrderCompleted(address indexed buyer, address indexed seller, uint256 amount)
func (_Contract *ContractFilterer) ParseOrderCompleted(log types.Log) (*ContractOrderCompleted, error) {
	event := new(ContractOrderCompleted)
	if err := _Contract.contract.UnpackLog(event, "OrderCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerAcceptedIterator is returned from FilterSellerAccepted and is used to iterate over the raw logs and unpacked data for SellerAccepted events raised by the Contract contract.
type ContractSellerAcceptedIterator struct {
	Event *ContractSellerAccepted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerAcceptedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerAccepted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerAccepted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerAcceptedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerAcceptedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerAccepted represents a SellerAccepted event raised by the Contract contract.
type ContractSellerAccepted struct {
	Seller  common.Address
	Buyer   common.Address
	OrderID string
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerAccepted is a free log retrieval operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) FilterSellerAccepted(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerAcceptedIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerAcceptedIterator{contract: _Contract.contract, event: "SellerAccepted", logs: logs, sub: sub}, nil
}

// WatchSellerAccepted is a free log subscription operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) WatchSellerAccepted(opts *bind.WatchOpts, sink chan<- *ContractSellerAccepted, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerAccepted", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerAccepted)
				if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerAccepted is a log parse operation binding the contract event 0x40078477a6dc67e30ec77e8a4b1d8749dd098056fe79ee602c2456b60e7c8d0a.
//
// Solidity: event SellerAccepted(address indexed seller, address indexed buyer, string orderID)
func (_Contract *ContractFilterer) ParseSellerAccepted(log types.Log) (*ContractSellerAccepted, error) {
	event := new(ContractSellerAccepted)
	if err := _Contract.contract.UnpackLog(event, "SellerAccepted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractSellerGetPaymentIterator is returned from FilterSellerGetPayment and is used to iterate over the raw logs and unpacked data for SellerGetPayment events raised by the Contract contract.
type ContractSellerGetPaymentIterator struct {
	Event *ContractSellerGetPayment // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractSellerGetPaymentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractSellerGetPayment)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractSellerGetPayment)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractSellerGetPaymentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractSellerGetPaymentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractSellerGetPayment represents a SellerGetPayment event raised by the Contract contract.
type ContractSellerGetPayment struct {
	Seller  common.Address
	Buyer   common.Address
	OrderID string
	Payment *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSellerGetPayment is a free log retrieval operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) FilterSellerGetPayment(opts *bind.FilterOpts, seller []common.Address, buyer []common.Address) (*ContractSellerGetPaymentIterator, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "SellerGetPayment", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return &ContractSellerGetPaymentIterator{contract: _Contract.contract, event: "SellerGetPayment", logs: logs, sub: sub}, nil
}

// WatchSellerGetPayment is a free log subscription operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) WatchSellerGetPayment(opts *bind.WatchOpts, sink chan<- *ContractSellerGetPayment, seller []common.Address, buyer []common.Address) (event.Subscription, error) {

	var sellerRule []interface{}
	for _, sellerItem := range seller {
		sellerRule = append(sellerRule, sellerItem)
	}
	var buyerRule []interface{}
	for _, buyerItem := range buyer {
		buyerRule = append(buyerRule, buyerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "SellerGetPayment", sellerRule, buyerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractSellerGetPayment)
				if err := _Contract.contract.UnpackLog(event, "SellerGetPayment", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSellerGetPayment is a log parse operation binding the contract event 0xd558c6fa7308993d16f63a349da75aca9f69611232918e75423f0eaa6d685450.
//
// Solidity: event SellerGetPayment(address indexed seller, address indexed buyer, string orderID, uint256 payment)
func (_Contract *ContractFilterer) ParseSellerGetPayment(log types.Log) (*ContractSellerGetPayment, error) {
	event := new(ContractSellerGetPayment)
	if err := _Contract.contract.UnpackLog(event, "SellerGetPayment", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
